window.game_code=atob('')
window.game_code=atob('')
window.game_code=atob('')
window.game_code=atob('')
window.game_code=atob('bG9jYWwgZ2FtZV9zcmNfZ2FtZU9iamVjdF8xZDBlZDAgPSBuaWwKbG9jYWwgZnVuY3Rpb24gbWFpbl8xYzFiODAoKQpsb2NhbCBmdW5jdGlvbiBfX1RTX19DbGFzcyhzZWxmKQpsb2NhbCBjID0ge3Byb3RvdHlwZSA9IHt9fQpjLnByb3RvdHlwZS5fX2luZGV4ID0gYy5wcm90b3R5cGUKYy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBjCnJldHVybiBjCmVuZApsb2NhbCBmdW5jdGlvbiBfX1RTX19DbGFzc0V4dGVuZHModGFyZ2V0LCBiYXNlKQp0YXJnZXQuX19fX3N1cGVyID0gYmFzZQpsb2NhbCBzdGF0aWNNZXRhdGFibGUgPSBzZXRtZXRhdGFibGUoe19faW5kZXggPSBiYXNlfSwgYmFzZSkKc2V0bWV0YXRhYmxlKHRhcmdldCwgc3RhdGljTWV0YXRhYmxlKQpsb2NhbCBiYXNlTWV0YXRhYmxlID0gZ2V0bWV0YXRhYmxlKGJhc2UpCmlmIGJhc2VNZXRhdGFibGUgdGhlbgppZiB0eXBlKGJhc2VNZXRhdGFibGUuX19pbmRleCkgPT0gImZ1bmN0aW9uIiB0aGVuCnN0YXRpY01ldGF0YWJsZS5fX2luZGV4ID0gYmFzZU1ldGF0YWJsZS5fX2luZGV4CmVuZAppZiB0eXBlKGJhc2VNZXRhdGFibGUuX19uZXdpbmRleCkgPT0gImZ1bmN0aW9uIiB0aGVuCnN0YXRpY01ldGF0YWJsZS5fX25ld2luZGV4ID0gYmFzZU1ldGF0YWJsZS5fX25ld2luZGV4CmVuZAplbmQKc2V0bWV0YXRhYmxlKHRhcmdldC5wcm90b3R5cGUsIGJhc2UucHJvdG90eXBlKQppZiB0eXBlKGJhc2UucHJvdG90eXBlLl9faW5kZXgpID09ICJmdW5jdGlvbiIgdGhlbgp0YXJnZXQucHJvdG90eXBlLl9faW5kZXggPSBiYXNlLnByb3RvdHlwZS5fX2luZGV4CmVuZAppZiB0eXBlKGJhc2UucHJvdG90eXBlLl9fbmV3aW5kZXgpID09ICJmdW5jdGlvbiIgdGhlbgp0YXJnZXQucHJvdG90eXBlLl9fbmV3aW5kZXggPSBiYXNlLnByb3RvdHlwZS5fX25ld2luZGV4CmVuZAppZiB0eXBlKGJhc2UucHJvdG90eXBlLl9fdG9zdHJpbmcpID09ICJmdW5jdGlvbiIgdGhlbgp0YXJnZXQucHJvdG90eXBlLl9fdG9zdHJpbmcgPSBiYXNlLnByb3RvdHlwZS5fX3Rvc3RyaW5nCmVuZAplbmQKbG9jYWwgZnVuY3Rpb24gX19UU19fTmV3KHRhcmdldCwgLi4uKQpsb2NhbCBpbnN0YW5jZSA9IHNldG1ldGF0YWJsZSh7fSwgdGFyZ2V0LnByb3RvdHlwZSkKaW5zdGFuY2U6X19fX2NvbnN0cnVjdG9yKC4uLikKcmV0dXJuIGluc3RhbmNlCmVuZApsb2NhbCBmdW5jdGlvbiBfX1RTX19BcnJheUZvckVhY2goc2VsZiwgY2FsbGJhY2tGbiwgdGhpc0FyZykKZm9yIGkgPSAxLCAjc2VsZiBkbwpjYWxsYmFja0ZuKHRoaXNBcmcsIHNlbGZbaV0sIGkgLSAxLCBzZWxmKQplbmQKZW5kCmxvY2FsIF9fX19leHBvcnRzID0ge30KbG9jYWwgX19fX2dhbWVPYmplY3QgPSBnYW1lX3NyY19nYW1lT2JqZWN0XzFkMGVkMCgpCmxvY2FsIFZlY3RvcjIgPSBfX19fZ2FtZU9iamVjdC5WZWN0b3IyCmxvY2FsIEdhbWVPYmplY3QgPSBfX19fZ2FtZU9iamVjdC5HYW1lT2JqZWN0Cl9fX19leHBvcnRzLnRpdGxlID0gIkdseSBFbmdpbmUgR2FtZWphbSIKX19fX2V4cG9ydHMuYXV0aG9yID0gIkFsZXggT2xpdmVpcmEiCl9fX19leHBvcnRzLnZlcnNpb24gPSAiMS4wLjAiCl9fX19leHBvcnRzLmRlc2NyaXB0aW9uID0gIlRoZSBiZXN0IGdhbWUgaW4gdGhlIHdvcmxkIG1hZGUgaW4gR2x5RW5naW5lIgpsb2NhbCBDQVJEX0xJU1QgPSB7e2lkID0gImVtcGVyb3IiLCBuYW1lID0gIkVtcGVyb3IiLCB0ZXh0dXJlID0gImNhcmQxLnBuZyJ9LCB7aWQgPSAiaGlnaF9wcmllc3Rlc3MiLCBuYW1lID0gIkhpZ2ggUHJpZXN0ZXNzIiwgdGV4dHVyZSA9ICJjYXJkMi5wbmcifSwge2lkID0gInN1biIsIG5hbWUgPSAiU3VuIiwgdGV4dHVyZSA9ICJjYXJkMy5wbmcifSwge2lkID0gIm1hZ2ljaWFuIiwgbmFtZSA9ICJNYWdpY2lhbiIsIHRleHR1cmUgPSAiY2FyZDQucG5nIn19CmxvY2FsIENhcmQgPSBfX1RTX19DbGFzcygpCkNhcmQubmFtZSA9ICJDYXJkIgpfX1RTX19DbGFzc0V4dGVuZHMoQ2FyZCwgR2FtZU9iamVjdCkKZnVuY3Rpb24gQ2FyZC5wcm90b3R5cGUuX19fX2NvbnN0cnVjdG9yKHNlbGYsIGNhcmRJbmZvKQpHYW1lT2JqZWN0LnByb3RvdHlwZS5fX19fY29uc3RydWN0b3IoCnNlbGYsCl9fVFNfX05ldyhWZWN0b3IyLCAxMDAsIDEwMCksCl9fVFNfX05ldyhWZWN0b3IyLCAxMDAsIDEwMCkKKQpzZWxmLmlzVXAgPSBmYWxzZQpzZWxmLmlkID0gY2FyZEluZm8uaWQKc2VsZi5uYW1lID0gY2FyZEluZm8ubmFtZQpzZWxmLnRleHR1cmUgPSBjYXJkSW5mby50ZXh0dXJlCmVuZApmdW5jdGlvbiBDYXJkLnByb3RvdHlwZS51cChzZWxmKQpwcmludCgiY2FyZCB1cCIpCnNlbGY6c3RhcnQoe3ggPSBzZWxmLnRyYW5zZm9ybS5wb3NpdGlvbi54LCB5ID0gc2VsZi50cmFuc2Zvcm0ucG9zaXRpb24ueSAtIDUwfSwgMC41KQpzZWxmLmlzVXAgPSB0cnVlCmVuZApmdW5jdGlvbiBDYXJkLnByb3RvdHlwZS5kb3duKHNlbGYpCmlmIG5vdCBzZWxmLmlzVXAgdGhlbgpyZXR1cm4KZW5kCnByaW50KCJjYXJkIGRvd24iKQpzZWxmOnN0YXJ0KHt4ID0gc2VsZi50cmFuc2Zvcm0ucG9zaXRpb24ueCwgeSA9IHNlbGYudHJhbnNmb3JtLnBvc2l0aW9uLnkgKyA1MH0sIDAuNSkKc2VsZi5pc1VwID0gZmFsc2UKZW5kCmZ1bmN0aW9uIENhcmQucHJvdG90eXBlLmRyYXdDYXJkKHNlbGYsIHN0ZCkKc3RkLmRyYXcuaW1hZ2Uoc2VsZi50ZXh0dXJlLCBzZWxmLnRyYW5zZm9ybS5wb3NpdGlvbi54LCBzZWxmLnRyYW5zZm9ybS5wb3NpdGlvbi55KQplbmQKbG9jYWwgSGFuZCA9IF9fVFNfX0NsYXNzKCkKSGFuZC5uYW1lID0gIkhhbmQiCmZ1bmN0aW9uIEhhbmQucHJvdG90eXBlLl9fX19jb25zdHJ1Y3RvcihzZWxmKQpzZWxmLmNhcmRzID0ge30Kc2VsZi5zZWxlY3RlZENhcmQgPSAwCmVuZApmdW5jdGlvbiBIYW5kLnByb3RvdHlwZS5nZW5lcmF0ZU5ld0hhbmQoc2VsZikKcHJpbnQoIiMgR2VuZXJhdGluZyBOZXcgSGFuZCAjIikKbG9jYWwgbmV3Q2FyZCA9IG5pbApkbwpsb2NhbCBpID0gMAp3aGlsZSBpIDwgMyBkbwpuZXdDYXJkID0gc2VsZjpnZXROZXdDYXJkKCkKcHJpbnQoIkdldCBjYXJkIHdpdGggc3VjY2VzczoiLCBuZXdDYXJkKQpsb2NhbCBjYXJkQ291bnQgPSAwCmRvCmxvY2FsIG4gPSAwCndoaWxlIG4gPCAjc2VsZi5jYXJkcyBkbwppZiBjYXJkQ291bnQgPT0gMiB0aGVuCmJyZWFrCmVuZApsb2NhbCBjYXJkID0gc2VsZi5jYXJkc1tuICsgMV0KaWYgY2FyZC5pZCA9PSBuZXdDYXJkLmlkIHRoZW4KY2FyZENvdW50ID0gY2FyZENvdW50ICsgMQplbmQKbiA9IG4gKyAxCmVuZAplbmQKaWYgY2FyZENvdW50ID49IDIgdGhlbgpsb2NhbCByZXNlcnZlQ2FyZCA9IHNlbGY6Z2V0TmV3Q2FyZCgpCndoaWxlIG5ld0NhcmQuaWQgPT0gcmVzZXJ2ZUNhcmQuaWQgZG8KcmVzZXJ2ZUNhcmQgPSBzZWxmOmdldE5ld0NhcmQoKQplbmQKbG9jYWwgX19fX3NlbGZfY2FyZHNfMCA9IHNlbGYuY2FyZHMKX19fX3NlbGZfY2FyZHNfMFsjX19fX3NlbGZfY2FyZHNfMCArIDFdID0gcmVzZXJ2ZUNhcmQKZWxzZQpsb2NhbCBfX19fc2VsZl9jYXJkc18xID0gc2VsZi5jYXJkcwpfX19fc2VsZl9jYXJkc18xWyNfX19fc2VsZl9jYXJkc18xICsgMV0gPSBuZXdDYXJkCmVuZAppID0gaSArIDEKZW5kCmVuZApwcmludCgiRmluaXNoZWQgZ2VuZXJhdGluZyBuZXcgaGFuZCEiKQplbmQKZnVuY3Rpb24gSGFuZC5wcm90b3R5cGUuZ2V0TmV3Q2FyZChzZWxmKQpwcmludCgiR2VuZXJhdGluZyBDYXJkLi4uIikKcmV0dXJuIF9fVFNfX05ldygKQ2FyZCwKQ0FSRF9MSVNUW21hdGguZmxvb3IobWF0aC5yYW5kb20oKSAqICNDQVJEX0xJU1QpICsgMV0KKQplbmQKZnVuY3Rpb24gSGFuZC5wcm90b3R5cGUuZHJhd0hhbmRDYXJkcyhzZWxmLCBzdGQpCl9fVFNfX0FycmF5Rm9yRWFjaCgKc2VsZi5jYXJkcywKZnVuY3Rpb24oX19fXywgY2FyZCkKY2FyZDpkcmF3Q2FyZChzdGQpCmVuZAopCmVuZApmdW5jdGlvbiBIYW5kLnByb3RvdHlwZS51cGRhdGVTdGF0ZShzZWxmLCBzdGQpCnByaW50KCJ0aWNrIHVwZGF0ZSBjYXJkcyIpCl9fVFNfX0FycmF5Rm9yRWFjaCgKc2VsZi5jYXJkcywKZnVuY3Rpb24oX19fXywgY2FyZCkKY2FyZDp1cGRhdGUoc3RkKQplbmQKKQplbmQKZnVuY3Rpb24gSGFuZC5wcm90b3R5cGUuc2V0Q2FyZHNQb3NpdGlvbihzZWxmLCBzY3JlZW5XaWR0aCwgc2NyZWVuSGVpZ2h0KQpsb2NhbCBuZXdQb3NpdGlvbiA9IF9fVFNfX05ldyhWZWN0b3IyLCAwLCAwKQpsb2NhbCBzcGFjaW5nID0gNTAKbG9jYWwgY2FyZFdpZHRoID0gMTI2CmxvY2FsIGNhcmRIZWlnaHQgPSAxODYKbG9jYWwgdG90YWxXaWR0aCA9ICNzZWxmLmNhcmRzICogc3BhY2luZyArICgjc2VsZi5jYXJkcyAtIDEpICogY2FyZFdpZHRoCmxvY2FsIHggPSAoc2NyZWVuV2lkdGggLSB0b3RhbFdpZHRoKSAvIDIKX19UU19fQXJyYXlGb3JFYWNoKApzZWxmLmNhcmRzLApmdW5jdGlvbihfX19fLCBjYXJkKQpjYXJkLnRyYW5zZm9ybS5wb3NpdGlvbiA9IF9fVFNfX05ldyhWZWN0b3IyLCB4LCBzY3JlZW5IZWlnaHQgLSBjYXJkSGVpZ2h0IC0gc3BhY2luZykKeCA9IHggKyAxNjAKZW5kCikKZW5kCmZ1bmN0aW9uIEhhbmQucHJvdG90eXBlLnNldEFjdGl2ZUNhcmQoc2VsZiwgc3VtKQppZiBzdW0gdGhlbgppZiBzZWxmLnNlbGVjdGVkQ2FyZCA+ICNzZWxmLmNhcmRzIHRoZW4Kc2VsZi5zZWxlY3RlZENhcmQgPSBzZWxmLnNlbGVjdGVkQ2FyZCArIDEKZW5kCnNlbGYuY2FyZHNbc2VsZi5zZWxlY3RlZENhcmQgKyAxXTp1cCgpCmRvCmxvY2FsIGkgPSAwCndoaWxlIGkgPCAjc2VsZi5jYXJkcyBkbwpsb2NhbCBjYXJkID0gc2VsZi5jYXJkc1tpICsgMV0KaWYgaSB+PSBzZWxmLnNlbGVjdGVkQ2FyZCB0aGVuCmNhcmQ6ZG93bigpCmVuZAppID0gaSArIDEKZW5kCmVuZAplbHNlCmlmIHNlbGYuc2VsZWN0ZWRDYXJkID4gMCB0aGVuCnNlbGYuc2VsZWN0ZWRDYXJkID0gc2VsZi5zZWxlY3RlZENhcmQgLSAxCmVuZApzZWxmLmNhcmRzW3NlbGYuc2VsZWN0ZWRDYXJkICsgMV06dXAoKQpkbwpsb2NhbCBpID0gMAp3aGlsZSBpIDwgI3NlbGYuY2FyZHMgZG8KbG9jYWwgY2FyZCA9IHNlbGYuY2FyZHNbaSArIDFdCmlmIGkgfj0gc2VsZi5zZWxlY3RlZENhcmQgdGhlbgpjYXJkOmRvd24oKQplbmQKaSA9IGkgKyAxCmVuZAplbmQKZW5kCmVuZApsb2NhbCBoYW5kID0gX19UU19fTmV3KEhhbmQpCmxvY2FsIGZ1bmN0aW9uIGluaXQoc3RkLCBnYW1lKQpoYW5kOmdlbmVyYXRlTmV3SGFuZCgpCmhhbmQ6c2V0Q2FyZHNQb3NpdGlvbihnYW1lLndpZHRoLCBnYW1lLmhlaWdodCkKZW5kCmxvY2FsIGZ1bmN0aW9uIGxvb3Aoc3RkLCBnYW1lKQpwcmludChzdGQua2V5LnByZXNzLmxlZnQpCmlmIHN0ZC5rZXkucHJlc3MubGVmdCB0aGVuCnByaW50KCJwcmVzc2VkIGxlZnQiKQpoYW5kOnNldEFjdGl2ZUNhcmQodHJ1ZSkKZW5kCmlmIHN0ZC5rZXkucHJlc3MucmlnaHQgdGhlbgpwcmludCgicHJlc3NlZCByaWdodCIpCmhhbmQ6c2V0QWN0aXZlQ2FyZChmYWxzZSkKZW5kCmhhbmQ6dXBkYXRlU3RhdGUoc3RkKQplbmQKbG9jYWwgZnVuY3Rpb24gZHJhdyhzdGQsIGdhbWUpCnN0ZC5kcmF3LmNsZWFyKHN0ZC5jb2xvci5ibGFjaykKaGFuZDpkcmF3SGFuZENhcmRzKHN0ZCkKZW5kCmxvY2FsIGZ1bmN0aW9uIGV4aXQoc3RkLCBnYW1lKQplbmQKX19fX2V4cG9ydHMuaW5pdCA9IGluaXQKX19fX2V4cG9ydHMubG9vcCA9IGxvb3AKX19fX2V4cG9ydHMuZHJhdyA9IGRyYXcKX19fX2V4cG9ydHMuZXhpdCA9IGV4aXQKcmV0dXJuIF9fX19leHBvcnRzCmVuZApnYW1lX3NyY19nYW1lT2JqZWN0XzFkMGVkMCA9IGZ1bmN0aW9uKCkKbG9jYWwgZnVuY3Rpb24gX19UU19fQ2xhc3Moc2VsZikKbG9jYWwgYyA9IHtwcm90b3R5cGUgPSB7fX0KYy5wcm90b3R5cGUuX19pbmRleCA9IGMucHJvdG90eXBlCmMucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gYwpyZXR1cm4gYwplbmQKbG9jYWwgZnVuY3Rpb24gX19UU19fTmV3KHRhcmdldCwgLi4uKQpsb2NhbCBpbnN0YW5jZSA9IHNldG1ldGF0YWJsZSh7fSwgdGFyZ2V0LnByb3RvdHlwZSkKaW5zdGFuY2U6X19fX2NvbnN0cnVjdG9yKC4uLikKcmV0dXJuIGluc3RhbmNlCmVuZApsb2NhbCBfX19fZXhwb3J0cyA9IHt9CmxvY2FsIEFuaW1hdGlvbkNvbnRyb2xsZXIKX19fX2V4cG9ydHMuVmVjdG9yMiA9IF9fVFNfX0NsYXNzKCkKbG9jYWwgVmVjdG9yMiA9IF9fX19leHBvcnRzLlZlY3RvcjIKVmVjdG9yMi5uYW1lID0gIlZlY3RvcjIiCmZ1bmN0aW9uIFZlY3RvcjIucHJvdG90eXBlLl9fX19jb25zdHJ1Y3RvcihzZWxmLCB4LCB5KQpzZWxmLnggPSB4CnNlbGYueSA9IHkKZW5kCmxvY2FsIFRyYW5zZm9ybSA9IF9fVFNfX0NsYXNzKCkKVHJhbnNmb3JtLm5hbWUgPSAiVHJhbnNmb3JtIgpmdW5jdGlvbiBUcmFuc2Zvcm0ucHJvdG90eXBlLl9fX19jb25zdHJ1Y3RvcihzZWxmLCBwb3NpdGlvbiwgc2NhbGUpCnNlbGYucG9zaXRpb24gPSBwb3NpdGlvbgpzZWxmLnNjYWxlID0gc2NhbGUKZW5kCl9fX19leHBvcnRzLkdhbWVPYmplY3QgPSBfX1RTX19DbGFzcygpCmxvY2FsIEdhbWVPYmplY3QgPSBfX19fZXhwb3J0cy5HYW1lT2JqZWN0CkdhbWVPYmplY3QubmFtZSA9ICJHYW1lT2JqZWN0IgpmdW5jdGlvbiBHYW1lT2JqZWN0LnByb3RvdHlwZS5fX19fY29uc3RydWN0b3Ioc2VsZiwgcG9zaXRpb24sIHNjYWxlKQpzZWxmLnRyYW5zZm9ybSA9IF9fVFNfX05ldyhUcmFuc2Zvcm0sIHBvc2l0aW9uLCBzY2FsZSkKc2VsZi5hbmltYXRvciA9IF9fVFNfX05ldyhBbmltYXRpb25Db250cm9sbGVyLCBzZWxmKQplbmQKZnVuY3Rpb24gR2FtZU9iamVjdC5wcm90b3R5cGUuZHJhdyhzZWxmLCBzdGQpCnN0ZC5kcmF3LnJlY3QoCjAsCnNlbGYudHJhbnNmb3JtLnBvc2l0aW9uLngsCnNlbGYudHJhbnNmb3JtLnBvc2l0aW9uLnksCnNlbGYudHJhbnNmb3JtLnNjYWxlLngsCnNlbGYudHJhbnNmb3JtLnNjYWxlLnkKKQplbmQKZnVuY3Rpb24gR2FtZU9iamVjdC5wcm90b3R5cGUudXBkYXRlKHNlbGYsIGR0KQpzZWxmLmFuaW1hdG9yOnVwZGF0ZShkdCkKZW5kCmZ1bmN0aW9uIEdhbWVPYmplY3QucHJvdG90eXBlLnN0YXJ0KHNlbGYsIHBvc2l0aW9uLCBkdXJhdGlvbikKc2VsZi5hbmltYXRvcjpzdGFydChwb3NpdGlvbiwgZHVyYXRpb24pCmVuZApBbmltYXRpb25Db250cm9sbGVyID0gX19UU19fQ2xhc3MoKQpBbmltYXRpb25Db250cm9sbGVyLm5hbWUgPSAiQW5pbWF0aW9uQ29udHJvbGxlciIKZnVuY3Rpb24gQW5pbWF0aW9uQ29udHJvbGxlci5wcm90b3R5cGUuX19fX2NvbnN0cnVjdG9yKHNlbGYsIG9iaikKc2VsZi5vYmogPSBvYmoKc2VsZi5hY3RpdmUgPSBmYWxzZQpzZWxmLmR1cmF0aW9uID0gMApzZWxmLmVsYXBzZWQgPSAwCmVuZApmdW5jdGlvbiBBbmltYXRpb25Db250cm9sbGVyLnByb3RvdHlwZS5zdGFydChzZWxmLCBwb3NpdGlvbiwgZHVyYXRpb24pCnNlbGYuc3RhcnRQb3NpdGlvbiA9IHNlbGYub2JqLnRyYW5zZm9ybS5wb3NpdGlvbgpzZWxmLmVuZFBvc2l0aW9uID0gcG9zaXRpb24Kc2VsZi5kdXJhdGlvbiA9IGR1cmF0aW9uCnNlbGYuZWxhcHNlZCA9IDAKc2VsZi5hY3RpdmUgPSB0cnVlCmVuZApmdW5jdGlvbiBBbmltYXRpb25Db250cm9sbGVyLnByb3RvdHlwZS51cGRhdGUoc2VsZiwgZHQpCmlmIG5vdCBzZWxmLmFjdGl2ZSB0aGVuCnJldHVybgplbmQKc2VsZi5lbGFwc2VkID0gc2VsZi5lbGFwc2VkICsgZHQgLyAxMDAwCmxvY2FsIHQgPSBtYXRoLm1pbihzZWxmLmVsYXBzZWQgLyBzZWxmLmR1cmF0aW9uLCAxKQpsb2NhbCBlYXNlZFQgPSAxIC0gKDEgLSB0KSBeIDUKc2VsZi5vYmoudHJhbnNmb3JtLnBvc2l0aW9uLnggPSBzZWxmLnN0YXJ0UG9zaXRpb24ueCArIChzZWxmLmVuZFBvc2l0aW9uLnggLSBzZWxmLnN0YXJ0UG9zaXRpb24ueCkgKiBlYXNlZFQKc2VsZi5vYmoudHJhbnNmb3JtLnBvc2l0aW9uLnkgPSBzZWxmLnN0YXJ0UG9zaXRpb24ueSArIChzZWxmLmVuZFBvc2l0aW9uLnkgLSBzZWxmLnN0YXJ0UG9zaXRpb24ueSkgKiBlYXNlZFQKaWYgZWFzZWRUID49IDEgdGhlbgpzZWxmLmFjdGl2ZSA9IGZhbHNlCnNlbGYub2JqLnRyYW5zZm9ybS5wb3NpdGlvbi54ID0gc2VsZi5lbmRQb3NpdGlvbi54CnNlbGYub2JqLnRyYW5zZm9ybS5wb3NpdGlvbi55ID0gc2VsZi5lbmRQb3NpdGlvbi55CmVuZAplbmQKcmV0dXJuIF9fX19leHBvcnRzCmVuZAotLQpyZXR1cm4gbWFpbl8xYzFiODAoKQo=')
window.game_code=atob('')
window.game_code=atob('')
window.game_code=atob('')
window.game_code=atob('')
window.game_code=atob('')
window.game_code=atob('')
window.game_code=atob('bG9jYWwgZ2FtZV9zcmNfZ2FtZU9iamVjdF8xZjQ5ZDggPSBuaWwKbG9jYWwgZnVuY3Rpb24gbWFpbl8xYzVmYTgoKQpsb2NhbCBmdW5jdGlvbiBfX1RTX19DbGFzcyhzZWxmKQpsb2NhbCBjID0ge3Byb3RvdHlwZSA9IHt9fQpjLnByb3RvdHlwZS5fX2luZGV4ID0gYy5wcm90b3R5cGUKYy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBjCnJldHVybiBjCmVuZApsb2NhbCBmdW5jdGlvbiBfX1RTX19DbGFzc0V4dGVuZHModGFyZ2V0LCBiYXNlKQp0YXJnZXQuX19fX3N1cGVyID0gYmFzZQpsb2NhbCBzdGF0aWNNZXRhdGFibGUgPSBzZXRtZXRhdGFibGUoe19faW5kZXggPSBiYXNlfSwgYmFzZSkKc2V0bWV0YXRhYmxlKHRhcmdldCwgc3RhdGljTWV0YXRhYmxlKQpsb2NhbCBiYXNlTWV0YXRhYmxlID0gZ2V0bWV0YXRhYmxlKGJhc2UpCmlmIGJhc2VNZXRhdGFibGUgdGhlbgppZiB0eXBlKGJhc2VNZXRhdGFibGUuX19pbmRleCkgPT0gImZ1bmN0aW9uIiB0aGVuCnN0YXRpY01ldGF0YWJsZS5fX2luZGV4ID0gYmFzZU1ldGF0YWJsZS5fX2luZGV4CmVuZAppZiB0eXBlKGJhc2VNZXRhdGFibGUuX19uZXdpbmRleCkgPT0gImZ1bmN0aW9uIiB0aGVuCnN0YXRpY01ldGF0YWJsZS5fX25ld2luZGV4ID0gYmFzZU1ldGF0YWJsZS5fX25ld2luZGV4CmVuZAplbmQKc2V0bWV0YXRhYmxlKHRhcmdldC5wcm90b3R5cGUsIGJhc2UucHJvdG90eXBlKQppZiB0eXBlKGJhc2UucHJvdG90eXBlLl9faW5kZXgpID09ICJmdW5jdGlvbiIgdGhlbgp0YXJnZXQucHJvdG90eXBlLl9faW5kZXggPSBiYXNlLnByb3RvdHlwZS5fX2luZGV4CmVuZAppZiB0eXBlKGJhc2UucHJvdG90eXBlLl9fbmV3aW5kZXgpID09ICJmdW5jdGlvbiIgdGhlbgp0YXJnZXQucHJvdG90eXBlLl9fbmV3aW5kZXggPSBiYXNlLnByb3RvdHlwZS5fX25ld2luZGV4CmVuZAppZiB0eXBlKGJhc2UucHJvdG90eXBlLl9fdG9zdHJpbmcpID09ICJmdW5jdGlvbiIgdGhlbgp0YXJnZXQucHJvdG90eXBlLl9fdG9zdHJpbmcgPSBiYXNlLnByb3RvdHlwZS5fX3Rvc3RyaW5nCmVuZAplbmQKbG9jYWwgZnVuY3Rpb24gX19UU19fTmV3KHRhcmdldCwgLi4uKQpsb2NhbCBpbnN0YW5jZSA9IHNldG1ldGF0YWJsZSh7fSwgdGFyZ2V0LnByb3RvdHlwZSkKaW5zdGFuY2U6X19fX2NvbnN0cnVjdG9yKC4uLikKcmV0dXJuIGluc3RhbmNlCmVuZApsb2NhbCBmdW5jdGlvbiBfX1RTX19BcnJheUZvckVhY2goc2VsZiwgY2FsbGJhY2tGbiwgdGhpc0FyZykKZm9yIGkgPSAxLCAjc2VsZiBkbwpjYWxsYmFja0ZuKHRoaXNBcmcsIHNlbGZbaV0sIGkgLSAxLCBzZWxmKQplbmQKZW5kCmxvY2FsIF9fX19leHBvcnRzID0ge30KbG9jYWwgX19fX2dhbWVPYmplY3QgPSBnYW1lX3NyY19nYW1lT2JqZWN0XzFmNDlkOCgpCmxvY2FsIFZlY3RvcjIgPSBfX19fZ2FtZU9iamVjdC5WZWN0b3IyCmxvY2FsIEdhbWVPYmplY3QgPSBfX19fZ2FtZU9iamVjdC5HYW1lT2JqZWN0Cl9fX19leHBvcnRzLnRpdGxlID0gIkdseSBFbmdpbmUgR2FtZWphbSIKX19fX2V4cG9ydHMuYXV0aG9yID0gIkFsZXggT2xpdmVpcmEiCl9fX19leHBvcnRzLnZlcnNpb24gPSAiMS4wLjAiCl9fX19leHBvcnRzLmRlc2NyaXB0aW9uID0gIlRoZSBiZXN0IGdhbWUgaW4gdGhlIHdvcmxkIG1hZGUgaW4gR2x5RW5naW5lIgpsb2NhbCBDQVJEX0xJU1QgPSB7e2lkID0gImVtcGVyb3IiLCBuYW1lID0gIkVtcGVyb3IiLCB0ZXh0dXJlID0gImNhcmQxLnBuZyJ9LCB7aWQgPSAiaGlnaF9wcmllc3Rlc3MiLCBuYW1lID0gIkhpZ2ggUHJpZXN0ZXNzIiwgdGV4dHVyZSA9ICJjYXJkMi5wbmcifSwge2lkID0gInN1biIsIG5hbWUgPSAiU3VuIiwgdGV4dHVyZSA9ICJjYXJkMy5wbmcifSwge2lkID0gIm1hZ2ljaWFuIiwgbmFtZSA9ICJNYWdpY2lhbiIsIHRleHR1cmUgPSAiY2FyZDQucG5nIn19CmxvY2FsIENhcmQgPSBfX1RTX19DbGFzcygpCkNhcmQubmFtZSA9ICJDYXJkIgpfX1RTX19DbGFzc0V4dGVuZHMoQ2FyZCwgR2FtZU9iamVjdCkKZnVuY3Rpb24gQ2FyZC5wcm90b3R5cGUuX19fX2NvbnN0cnVjdG9yKHNlbGYsIGNhcmRJbmZvKQpHYW1lT2JqZWN0LnByb3RvdHlwZS5fX19fY29uc3RydWN0b3IoCnNlbGYsCl9fVFNfX05ldyhWZWN0b3IyLCAxMDAsIDEwMCksCl9fVFNfX05ldyhWZWN0b3IyLCAxMDAsIDEwMCkKKQpzZWxmLmlzVXAgPSBmYWxzZQpzZWxmLmlkID0gY2FyZEluZm8uaWQKc2VsZi5uYW1lID0gY2FyZEluZm8ubmFtZQpzZWxmLnRleHR1cmUgPSBjYXJkSW5mby50ZXh0dXJlCmVuZApmdW5jdGlvbiBDYXJkLnByb3RvdHlwZS51cChzZWxmKQpwcmludCgiY2FyZCB1cCIpCnNlbGY6c3RhcnQoe3ggPSBzZWxmLnRyYW5zZm9ybS5wb3NpdGlvbi54LCB5ID0gc2VsZi50cmFuc2Zvcm0ucG9zaXRpb24ueSAtIDUwfSwgMC41KQpzZWxmLmlzVXAgPSB0cnVlCmVuZApmdW5jdGlvbiBDYXJkLnByb3RvdHlwZS5kb3duKHNlbGYpCmlmIG5vdCBzZWxmLmlzVXAgdGhlbgpyZXR1cm4KZW5kCnByaW50KCJjYXJkIGRvd24iKQpzZWxmOnN0YXJ0KHt4ID0gc2VsZi50cmFuc2Zvcm0ucG9zaXRpb24ueCwgeSA9IHNlbGYudHJhbnNmb3JtLnBvc2l0aW9uLnkgKyA1MH0sIDAuNSkKc2VsZi5pc1VwID0gZmFsc2UKZW5kCmZ1bmN0aW9uIENhcmQucHJvdG90eXBlLmRyYXdDYXJkKHNlbGYsIHN0ZCkKc3RkLmRyYXcuaW1hZ2Uoc2VsZi50ZXh0dXJlLCBzZWxmLnRyYW5zZm9ybS5wb3NpdGlvbi54LCBzZWxmLnRyYW5zZm9ybS5wb3NpdGlvbi55KQplbmQKbG9jYWwgSGFuZCA9IF9fVFNfX0NsYXNzKCkKSGFuZC5uYW1lID0gIkhhbmQiCmZ1bmN0aW9uIEhhbmQucHJvdG90eXBlLl9fX19jb25zdHJ1Y3RvcihzZWxmKQpzZWxmLmNhcmRzID0ge30Kc2VsZi5zZWxlY3RlZENhcmQgPSAwCmVuZApmdW5jdGlvbiBIYW5kLnByb3RvdHlwZS5nZW5lcmF0ZU5ld0hhbmQoc2VsZikKcHJpbnQoIiMgR2VuZXJhdGluZyBOZXcgSGFuZCAjIikKbG9jYWwgbmV3Q2FyZCA9IG5pbApkbwpsb2NhbCBpID0gMAp3aGlsZSBpIDwgMyBkbwpuZXdDYXJkID0gc2VsZjpnZXROZXdDYXJkKCkKcHJpbnQoIkdldCBjYXJkIHdpdGggc3VjY2VzczoiLCBuZXdDYXJkKQpsb2NhbCBjYXJkQ291bnQgPSAwCmRvCmxvY2FsIG4gPSAwCndoaWxlIG4gPCAjc2VsZi5jYXJkcyBkbwppZiBjYXJkQ291bnQgPT0gMiB0aGVuCmJyZWFrCmVuZApsb2NhbCBjYXJkID0gc2VsZi5jYXJkc1tuICsgMV0KaWYgY2FyZC5pZCA9PSBuZXdDYXJkLmlkIHRoZW4KY2FyZENvdW50ID0gY2FyZENvdW50ICsgMQplbmQKbiA9IG4gKyAxCmVuZAplbmQKaWYgY2FyZENvdW50ID49IDIgdGhlbgpsb2NhbCByZXNlcnZlQ2FyZCA9IHNlbGY6Z2V0TmV3Q2FyZCgpCndoaWxlIG5ld0NhcmQuaWQgPT0gcmVzZXJ2ZUNhcmQuaWQgZG8KcmVzZXJ2ZUNhcmQgPSBzZWxmOmdldE5ld0NhcmQoKQplbmQKbG9jYWwgX19fX3NlbGZfY2FyZHNfMCA9IHNlbGYuY2FyZHMKX19fX3NlbGZfY2FyZHNfMFsjX19fX3NlbGZfY2FyZHNfMCArIDFdID0gcmVzZXJ2ZUNhcmQKZWxzZQpsb2NhbCBfX19fc2VsZl9jYXJkc18xID0gc2VsZi5jYXJkcwpfX19fc2VsZl9jYXJkc18xWyNfX19fc2VsZl9jYXJkc18xICsgMV0gPSBuZXdDYXJkCmVuZAppID0gaSArIDEKZW5kCmVuZApwcmludCgiRmluaXNoZWQgZ2VuZXJhdGluZyBuZXcgaGFuZCEiKQplbmQKZnVuY3Rpb24gSGFuZC5wcm90b3R5cGUuZ2V0TmV3Q2FyZChzZWxmKQpwcmludCgiR2VuZXJhdGluZyBDYXJkLi4uIikKcmV0dXJuIF9fVFNfX05ldygKQ2FyZCwKQ0FSRF9MSVNUW21hdGguZmxvb3IobWF0aC5yYW5kb20oKSAqICNDQVJEX0xJU1QpICsgMV0KKQplbmQKZnVuY3Rpb24gSGFuZC5wcm90b3R5cGUuZHJhd0hhbmRDYXJkcyhzZWxmLCBzdGQpCl9fVFNfX0FycmF5Rm9yRWFjaCgKc2VsZi5jYXJkcywKZnVuY3Rpb24oX19fXywgY2FyZCkKY2FyZDpkcmF3Q2FyZChzdGQpCmVuZAopCmVuZApmdW5jdGlvbiBIYW5kLnByb3RvdHlwZS51cGRhdGVTdGF0ZShzZWxmLCBzdGQpCl9fVFNfX0FycmF5Rm9yRWFjaCgKc2VsZi5jYXJkcywKZnVuY3Rpb24oX19fXywgY2FyZCkKY2FyZDp1cGRhdGUoc3RkKQplbmQKKQplbmQKZnVuY3Rpb24gSGFuZC5wcm90b3R5cGUuc2V0Q2FyZHNQb3NpdGlvbihzZWxmLCBzY3JlZW5XaWR0aCwgc2NyZWVuSGVpZ2h0KQpsb2NhbCBuZXdQb3NpdGlvbiA9IF9fVFNfX05ldyhWZWN0b3IyLCAwLCAwKQpsb2NhbCBzcGFjaW5nID0gNTAKbG9jYWwgY2FyZFdpZHRoID0gMTI2CmxvY2FsIGNhcmRIZWlnaHQgPSAxODYKbG9jYWwgdG90YWxXaWR0aCA9ICNzZWxmLmNhcmRzICogc3BhY2luZyArICgjc2VsZi5jYXJkcyAtIDEpICogY2FyZFdpZHRoCmxvY2FsIHggPSAoc2NyZWVuV2lkdGggLSB0b3RhbFdpZHRoKSAvIDIKX19UU19fQXJyYXlGb3JFYWNoKApzZWxmLmNhcmRzLApmdW5jdGlvbihfX19fLCBjYXJkKQpjYXJkLnRyYW5zZm9ybS5wb3NpdGlvbiA9IF9fVFNfX05ldyhWZWN0b3IyLCB4LCBzY3JlZW5IZWlnaHQgLSBjYXJkSGVpZ2h0IC0gc3BhY2luZykKeCA9IHggKyAxNjAKZW5kCikKZW5kCmZ1bmN0aW9uIEhhbmQucHJvdG90eXBlLnNldEFjdGl2ZUNhcmQoc2VsZiwgc3VtKQppZiBzdW0gdGhlbgpwcmludCgiMCIpCmlmIHNlbGYuc2VsZWN0ZWRDYXJkID4gI3NlbGYuY2FyZHMgdGhlbgpzZWxmLnNlbGVjdGVkQ2FyZCA9IHNlbGYuc2VsZWN0ZWRDYXJkICsgMQplbmQKc2VsZi5jYXJkc1tzZWxmLnNlbGVjdGVkQ2FyZCArIDFdOnVwKCkKcHJpbnQoIjEiKQpkbwpsb2NhbCBpID0gMAp3aGlsZSBpIDwgI3NlbGYuY2FyZHMgZG8KcHJpbnQoIjIiKQpsb2NhbCBjYXJkID0gc2VsZi5jYXJkc1tpICsgMV0KaWYgaSB+PSBzZWxmLnNlbGVjdGVkQ2FyZCB0aGVuCnByaW50KCIzIikKY2FyZDpkb3duKCkKZW5kCmkgPSBpICsgMQplbmQKZW5kCmVsc2UKcHJpbnQoImVsc2UiKQppZiBzZWxmLnNlbGVjdGVkQ2FyZCA+IDAgdGhlbgpzZWxmLnNlbGVjdGVkQ2FyZCA9IHNlbGYuc2VsZWN0ZWRDYXJkIC0gMQplbmQKc2VsZi5jYXJkc1tzZWxmLnNlbGVjdGVkQ2FyZCArIDFdOnVwKCkKZG8KbG9jYWwgaSA9IDAKd2hpbGUgaSA8ICNzZWxmLmNhcmRzIGRvCmxvY2FsIGNhcmQgPSBzZWxmLmNhcmRzW2kgKyAxXQppZiBpIH49IHNlbGYuc2VsZWN0ZWRDYXJkIHRoZW4KY2FyZDpkb3duKCkKZW5kCmkgPSBpICsgMQplbmQKZW5kCmVuZApwcmludCgiZmltIikKZW5kCmxvY2FsIGhhbmQgPSBfX1RTX19OZXcoSGFuZCkKbG9jYWwgZnVuY3Rpb24gaW5pdChzdGQsIGdhbWUpCmhhbmQ6Z2VuZXJhdGVOZXdIYW5kKCkKaGFuZDpzZXRDYXJkc1Bvc2l0aW9uKGdhbWUud2lkdGgsIGdhbWUuaGVpZ2h0KQplbmQKbG9jYWwgZnVuY3Rpb24gbG9vcChzdGQsIGdhbWUpCmlmIHN0ZC5rZXkucHJlc3MubGVmdCB0aGVuCnByaW50KCJwcmVzc2VkIGxlZnQiKQpoYW5kOnNldEFjdGl2ZUNhcmQodHJ1ZSkKZW5kCmlmIHN0ZC5rZXkucHJlc3MucmlnaHQgdGhlbgpwcmludCgicHJlc3NlZCByaWdodCIpCmhhbmQ6c2V0QWN0aXZlQ2FyZChmYWxzZSkKZW5kCmVuZApsb2NhbCBmdW5jdGlvbiBkcmF3KHN0ZCwgZ2FtZSkKc3RkLmRyYXcuY2xlYXIoc3RkLmNvbG9yLmJsYWNrKQpoYW5kOmRyYXdIYW5kQ2FyZHMoc3RkKQplbmQKbG9jYWwgZnVuY3Rpb24gZXhpdChzdGQsIGdhbWUpCmVuZApfX19fZXhwb3J0cy5pbml0ID0gaW5pdApfX19fZXhwb3J0cy5sb29wID0gbG9vcApfX19fZXhwb3J0cy5kcmF3ID0gZHJhdwpfX19fZXhwb3J0cy5leGl0ID0gZXhpdApyZXR1cm4gX19fX2V4cG9ydHMKZW5kCmdhbWVfc3JjX2dhbWVPYmplY3RfMWY0OWQ4ID0gZnVuY3Rpb24oKQpsb2NhbCBmdW5jdGlvbiBfX1RTX19DbGFzcyhzZWxmKQpsb2NhbCBjID0ge3Byb3RvdHlwZSA9IHt9fQpjLnByb3RvdHlwZS5fX2luZGV4ID0gYy5wcm90b3R5cGUKYy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBjCnJldHVybiBjCmVuZApsb2NhbCBmdW5jdGlvbiBfX1RTX19OZXcodGFyZ2V0LCAuLi4pCmxvY2FsIGluc3RhbmNlID0gc2V0bWV0YXRhYmxlKHt9LCB0YXJnZXQucHJvdG90eXBlKQppbnN0YW5jZTpfX19fY29uc3RydWN0b3IoLi4uKQpyZXR1cm4gaW5zdGFuY2UKZW5kCmxvY2FsIF9fX19leHBvcnRzID0ge30KbG9jYWwgQW5pbWF0aW9uQ29udHJvbGxlcgpfX19fZXhwb3J0cy5WZWN0b3IyID0gX19UU19fQ2xhc3MoKQpsb2NhbCBWZWN0b3IyID0gX19fX2V4cG9ydHMuVmVjdG9yMgpWZWN0b3IyLm5hbWUgPSAiVmVjdG9yMiIKZnVuY3Rpb24gVmVjdG9yMi5wcm90b3R5cGUuX19fX2NvbnN0cnVjdG9yKHNlbGYsIHgsIHkpCnNlbGYueCA9IHgKc2VsZi55ID0geQplbmQKbG9jYWwgVHJhbnNmb3JtID0gX19UU19fQ2xhc3MoKQpUcmFuc2Zvcm0ubmFtZSA9ICJUcmFuc2Zvcm0iCmZ1bmN0aW9uIFRyYW5zZm9ybS5wcm90b3R5cGUuX19fX2NvbnN0cnVjdG9yKHNlbGYsIHBvc2l0aW9uLCBzY2FsZSkKc2VsZi5wb3NpdGlvbiA9IHBvc2l0aW9uCnNlbGYuc2NhbGUgPSBzY2FsZQplbmQKX19fX2V4cG9ydHMuR2FtZU9iamVjdCA9IF9fVFNfX0NsYXNzKCkKbG9jYWwgR2FtZU9iamVjdCA9IF9fX19leHBvcnRzLkdhbWVPYmplY3QKR2FtZU9iamVjdC5uYW1lID0gIkdhbWVPYmplY3QiCmZ1bmN0aW9uIEdhbWVPYmplY3QucHJvdG90eXBlLl9fX19jb25zdHJ1Y3RvcihzZWxmLCBwb3NpdGlvbiwgc2NhbGUpCnNlbGYudHJhbnNmb3JtID0gX19UU19fTmV3KFRyYW5zZm9ybSwgcG9zaXRpb24sIHNjYWxlKQpzZWxmLmFuaW1hdG9yID0gX19UU19fTmV3KEFuaW1hdGlvbkNvbnRyb2xsZXIsIHNlbGYpCmVuZApmdW5jdGlvbiBHYW1lT2JqZWN0LnByb3RvdHlwZS5kcmF3KHNlbGYsIHN0ZCkKc3RkLmRyYXcucmVjdCgKMCwKc2VsZi50cmFuc2Zvcm0ucG9zaXRpb24ueCwKc2VsZi50cmFuc2Zvcm0ucG9zaXRpb24ueSwKc2VsZi50cmFuc2Zvcm0uc2NhbGUueCwKc2VsZi50cmFuc2Zvcm0uc2NhbGUueQopCmVuZApmdW5jdGlvbiBHYW1lT2JqZWN0LnByb3RvdHlwZS51cGRhdGUoc2VsZiwgZHQpCnNlbGYuYW5pbWF0b3I6dXBkYXRlKGR0KQplbmQKZnVuY3Rpb24gR2FtZU9iamVjdC5wcm90b3R5cGUuc3RhcnQoc2VsZiwgcG9zaXRpb24sIGR1cmF0aW9uKQpzZWxmLmFuaW1hdG9yOnN0YXJ0KHBvc2l0aW9uLCBkdXJhdGlvbikKZW5kCkFuaW1hdGlvbkNvbnRyb2xsZXIgPSBfX1RTX19DbGFzcygpCkFuaW1hdGlvbkNvbnRyb2xsZXIubmFtZSA9ICJBbmltYXRpb25Db250cm9sbGVyIgpmdW5jdGlvbiBBbmltYXRpb25Db250cm9sbGVyLnByb3RvdHlwZS5fX19fY29uc3RydWN0b3Ioc2VsZiwgb2JqKQpzZWxmLm9iaiA9IG9iagpzZWxmLmFjdGl2ZSA9IGZhbHNlCnNlbGYuZHVyYXRpb24gPSAwCnNlbGYuZWxhcHNlZCA9IDAKZW5kCmZ1bmN0aW9uIEFuaW1hdGlvbkNvbnRyb2xsZXIucHJvdG90eXBlLnN0YXJ0KHNlbGYsIHBvc2l0aW9uLCBkdXJhdGlvbikKc2VsZi5zdGFydFBvc2l0aW9uID0gc2VsZi5vYmoudHJhbnNmb3JtLnBvc2l0aW9uCnNlbGYuZW5kUG9zaXRpb24gPSBwb3NpdGlvbgpzZWxmLmR1cmF0aW9uID0gZHVyYXRpb24Kc2VsZi5lbGFwc2VkID0gMApzZWxmLmFjdGl2ZSA9IHRydWUKZW5kCmZ1bmN0aW9uIEFuaW1hdGlvbkNvbnRyb2xsZXIucHJvdG90eXBlLnVwZGF0ZShzZWxmLCBkdCkKaWYgbm90IHNlbGYuYWN0aXZlIHRoZW4KcmV0dXJuCmVuZApzZWxmLmVsYXBzZWQgPSBzZWxmLmVsYXBzZWQgKyBkdCAvIDEwMDAKbG9jYWwgdCA9IG1hdGgubWluKHNlbGYuZWxhcHNlZCAvIHNlbGYuZHVyYXRpb24sIDEpCmxvY2FsIGVhc2VkVCA9IDEgLSAoMSAtIHQpIF4gNQpzZWxmLm9iai50cmFuc2Zvcm0ucG9zaXRpb24ueCA9IHNlbGYuc3RhcnRQb3NpdGlvbi54ICsgKHNlbGYuZW5kUG9zaXRpb24ueCAtIHNlbGYuc3RhcnRQb3NpdGlvbi54KSAqIGVhc2VkVApzZWxmLm9iai50cmFuc2Zvcm0ucG9zaXRpb24ueSA9IHNlbGYuc3RhcnRQb3NpdGlvbi55ICsgKHNlbGYuZW5kUG9zaXRpb24ueSAtIHNlbGYuc3RhcnRQb3NpdGlvbi55KSAqIGVhc2VkVAppZiBlYXNlZFQgPj0gMSB0aGVuCnNlbGYuYWN0aXZlID0gZmFsc2UKc2VsZi5vYmoudHJhbnNmb3JtLnBvc2l0aW9uLnggPSBzZWxmLmVuZFBvc2l0aW9uLngKc2VsZi5vYmoudHJhbnNmb3JtLnBvc2l0aW9uLnkgPSBzZWxmLmVuZFBvc2l0aW9uLnkKZW5kCmVuZApyZXR1cm4gX19fX2V4cG9ydHMKZW5kCi0tCnJldHVybiBtYWluXzFjNWZhOCgpCgA=')
window.game_code=atob('')
window.game_code=atob('')
window.game_code=atob('')
window.game_code=atob('bG9jYWwgZ2FtZV9zcmNfZ2FtZU9iamVjdF8xMGU5ZTggPSBuaWwKbG9jYWwgZnVuY3Rpb24gbWFpbl8xYzBjNzAoKQpsb2NhbCBmdW5jdGlvbiBfX1RTX19DbGFzcyhzZWxmKQpsb2NhbCBjID0ge3Byb3RvdHlwZSA9IHt9fQpjLnByb3RvdHlwZS5fX2luZGV4ID0gYy5wcm90b3R5cGUKYy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBjCnJldHVybiBjCmVuZApsb2NhbCBmdW5jdGlvbiBfX1RTX19DbGFzc0V4dGVuZHModGFyZ2V0LCBiYXNlKQp0YXJnZXQuX19fX3N1cGVyID0gYmFzZQpsb2NhbCBzdGF0aWNNZXRhdGFibGUgPSBzZXRtZXRhdGFibGUoe19faW5kZXggPSBiYXNlfSwgYmFzZSkKc2V0bWV0YXRhYmxlKHRhcmdldCwgc3RhdGljTWV0YXRhYmxlKQpsb2NhbCBiYXNlTWV0YXRhYmxlID0gZ2V0bWV0YXRhYmxlKGJhc2UpCmlmIGJhc2VNZXRhdGFibGUgdGhlbgppZiB0eXBlKGJhc2VNZXRhdGFibGUuX19pbmRleCkgPT0gImZ1bmN0aW9uIiB0aGVuCnN0YXRpY01ldGF0YWJsZS5fX2luZGV4ID0gYmFzZU1ldGF0YWJsZS5fX2luZGV4CmVuZAppZiB0eXBlKGJhc2VNZXRhdGFibGUuX19uZXdpbmRleCkgPT0gImZ1bmN0aW9uIiB0aGVuCnN0YXRpY01ldGF0YWJsZS5fX25ld2luZGV4ID0gYmFzZU1ldGF0YWJsZS5fX25ld2luZGV4CmVuZAplbmQKc2V0bWV0YXRhYmxlKHRhcmdldC5wcm90b3R5cGUsIGJhc2UucHJvdG90eXBlKQppZiB0eXBlKGJhc2UucHJvdG90eXBlLl9faW5kZXgpID09ICJmdW5jdGlvbiIgdGhlbgp0YXJnZXQucHJvdG90eXBlLl9faW5kZXggPSBiYXNlLnByb3RvdHlwZS5fX2luZGV4CmVuZAppZiB0eXBlKGJhc2UucHJvdG90eXBlLl9fbmV3aW5kZXgpID09ICJmdW5jdGlvbiIgdGhlbgp0YXJnZXQucHJvdG90eXBlLl9fbmV3aW5kZXggPSBiYXNlLnByb3RvdHlwZS5fX25ld2luZGV4CmVuZAppZiB0eXBlKGJhc2UucHJvdG90eXBlLl9fdG9zdHJpbmcpID09ICJmdW5jdGlvbiIgdGhlbgp0YXJnZXQucHJvdG90eXBlLl9fdG9zdHJpbmcgPSBiYXNlLnByb3RvdHlwZS5fX3Rvc3RyaW5nCmVuZAplbmQKbG9jYWwgZnVuY3Rpb24gX19UU19fTmV3KHRhcmdldCwgLi4uKQpsb2NhbCBpbnN0YW5jZSA9IHNldG1ldGF0YWJsZSh7fSwgdGFyZ2V0LnByb3RvdHlwZSkKaW5zdGFuY2U6X19fX2NvbnN0cnVjdG9yKC4uLikKcmV0dXJuIGluc3RhbmNlCmVuZApsb2NhbCBmdW5jdGlvbiBfX1RTX19BcnJheUZvckVhY2goc2VsZiwgY2FsbGJhY2tGbiwgdGhpc0FyZykKZm9yIGkgPSAxLCAjc2VsZiBkbwpjYWxsYmFja0ZuKHRoaXNBcmcsIHNlbGZbaV0sIGkgLSAxLCBzZWxmKQplbmQKZW5kCmxvY2FsIF9fX19leHBvcnRzID0ge30KbG9jYWwgX19fX2dhbWVPYmplY3QgPSBnYW1lX3NyY19nYW1lT2JqZWN0XzEwZTllOCgpCmxvY2FsIFZlY3RvcjIgPSBfX19fZ2FtZU9iamVjdC5WZWN0b3IyCmxvY2FsIEdhbWVPYmplY3QgPSBfX19fZ2FtZU9iamVjdC5HYW1lT2JqZWN0Cl9fX19leHBvcnRzLnRpdGxlID0gIkdseSBFbmdpbmUgR2FtZWphbSIKX19fX2V4cG9ydHMuYXV0aG9yID0gIkFsZXggT2xpdmVpcmEiCl9fX19leHBvcnRzLnZlcnNpb24gPSAiMS4wLjAiCl9fX19leHBvcnRzLmRlc2NyaXB0aW9uID0gIlRoZSBiZXN0IGdhbWUgaW4gdGhlIHdvcmxkIG1hZGUgaW4gR2x5RW5naW5lIgpsb2NhbCBDQVJEX0xJU1QgPSB7e2lkID0gImVtcGVyb3IiLCBuYW1lID0gIkVtcGVyb3IiLCB0ZXh0dXJlID0gImNhcmQxLnBuZyJ9LCB7aWQgPSAiaGlnaF9wcmllc3Rlc3MiLCBuYW1lID0gIkhpZ2ggUHJpZXN0ZXNzIiwgdGV4dHVyZSA9ICJjYXJkMi5wbmcifSwge2lkID0gInN1biIsIG5hbWUgPSAiU3VuIiwgdGV4dHVyZSA9ICJjYXJkMy5wbmcifSwge2lkID0gIm1hZ2ljaWFuIiwgbmFtZSA9ICJNYWdpY2lhbiIsIHRleHR1cmUgPSAiY2FyZDQucG5nIn19CmxvY2FsIENhcmQgPSBfX1RTX19DbGFzcygpCkNhcmQubmFtZSA9ICJDYXJkIgpfX1RTX19DbGFzc0V4dGVuZHMoQ2FyZCwgR2FtZU9iamVjdCkKZnVuY3Rpb24gQ2FyZC5wcm90b3R5cGUuX19fX2NvbnN0cnVjdG9yKHNlbGYsIGNhcmRJbmZvKQpHYW1lT2JqZWN0LnByb3RvdHlwZS5fX19fY29uc3RydWN0b3IoCnNlbGYsCl9fVFNfX05ldyhWZWN0b3IyLCAxMDAsIDEwMCksCl9fVFNfX05ldyhWZWN0b3IyLCAxMDAsIDEwMCkKKQpzZWxmLmlzVXAgPSBmYWxzZQpzZWxmLmlkID0gY2FyZEluZm8uaWQKc2VsZi5uYW1lID0gY2FyZEluZm8ubmFtZQpzZWxmLnRleHR1cmUgPSBjYXJkSW5mby50ZXh0dXJlCmVuZApmdW5jdGlvbiBDYXJkLnByb3RvdHlwZS51cChzZWxmKQpwcmludCgiY2FyZCB1cCIpCnNlbGY6c3RhcnQoe3ggPSBzZWxmLnRyYW5zZm9ybS5wb3NpdGlvbi54LCB5ID0gc2VsZi50cmFuc2Zvcm0ucG9zaXRpb24ueSAtIDUwfSwgMC41KQpzZWxmLmlzVXAgPSB0cnVlCmVuZApmdW5jdGlvbiBDYXJkLnByb3RvdHlwZS5kb3duKHNlbGYpCmlmIG5vdCBzZWxmLmlzVXAgdGhlbgpyZXR1cm4KZW5kCnByaW50KCJjYXJkIGRvd24iKQpzZWxmOnN0YXJ0KHt4ID0gc2VsZi50cmFuc2Zvcm0ucG9zaXRpb24ueCwgeSA9IHNlbGYudHJhbnNmb3JtLnBvc2l0aW9uLnkgKyA1MH0sIDAuNSkKc2VsZi5pc1VwID0gZmFsc2UKZW5kCmZ1bmN0aW9uIENhcmQucHJvdG90eXBlLmRyYXdDYXJkKHNlbGYsIHN0ZCkKc3RkLmRyYXcuaW1hZ2Uoc2VsZi50ZXh0dXJlLCBzZWxmLnRyYW5zZm9ybS5wb3NpdGlvbi54LCBzZWxmLnRyYW5zZm9ybS5wb3NpdGlvbi55KQplbmQKbG9jYWwgSGFuZCA9IF9fVFNfX0NsYXNzKCkKSGFuZC5uYW1lID0gIkhhbmQiCmZ1bmN0aW9uIEhhbmQucHJvdG90eXBlLl9fX19jb25zdHJ1Y3RvcihzZWxmKQpzZWxmLmNhcmRzID0ge30Kc2VsZi5zZWxlY3RlZENhcmQgPSAwCmVuZApmdW5jdGlvbiBIYW5kLnByb3RvdHlwZS5nZW5lcmF0ZU5ld0hhbmQoc2VsZikKcHJpbnQoIiMgR2VuZXJhdGluZyBOZXcgSGFuZCAjIikKbG9jYWwgbmV3Q2FyZCA9IG5pbApkbwpsb2NhbCBpID0gMAp3aGlsZSBpIDwgMyBkbwpuZXdDYXJkID0gc2VsZjpnZXROZXdDYXJkKCkKcHJpbnQoIkdldCBjYXJkIHdpdGggc3VjY2VzczoiLCBuZXdDYXJkKQpsb2NhbCBjYXJkQ291bnQgPSAwCmRvCmxvY2FsIG4gPSAwCndoaWxlIG4gPCAjc2VsZi5jYXJkcyBkbwppZiBjYXJkQ291bnQgPT0gMiB0aGVuCmJyZWFrCmVuZApsb2NhbCBjYXJkID0gc2VsZi5jYXJkc1tuICsgMV0KaWYgY2FyZC5pZCA9PSBuZXdDYXJkLmlkIHRoZW4KY2FyZENvdW50ID0gY2FyZENvdW50ICsgMQplbmQKbiA9IG4gKyAxCmVuZAplbmQKaWYgY2FyZENvdW50ID49IDIgdGhlbgpsb2NhbCByZXNlcnZlQ2FyZCA9IHNlbGY6Z2V0TmV3Q2FyZCgpCndoaWxlIG5ld0NhcmQuaWQgPT0gcmVzZXJ2ZUNhcmQuaWQgZG8KcmVzZXJ2ZUNhcmQgPSBzZWxmOmdldE5ld0NhcmQoKQplbmQKbG9jYWwgX19fX3NlbGZfY2FyZHNfMCA9IHNlbGYuY2FyZHMKX19fX3NlbGZfY2FyZHNfMFsjX19fX3NlbGZfY2FyZHNfMCArIDFdID0gcmVzZXJ2ZUNhcmQKZWxzZQpsb2NhbCBfX19fc2VsZl9jYXJkc18xID0gc2VsZi5jYXJkcwpfX19fc2VsZl9jYXJkc18xWyNfX19fc2VsZl9jYXJkc18xICsgMV0gPSBuZXdDYXJkCmVuZAppID0gaSArIDEKZW5kCmVuZApwcmludCgiRmluaXNoZWQgZ2VuZXJhdGluZyBuZXcgaGFuZCEiKQplbmQKZnVuY3Rpb24gSGFuZC5wcm90b3R5cGUuZ2V0TmV3Q2FyZChzZWxmKQpwcmludCgiR2VuZXJhdGluZyBDYXJkLi4uIikKcmV0dXJuIF9fVFNfX05ldygKQ2FyZCwKQ0FSRF9MSVNUW21hdGguZmxvb3IobWF0aC5yYW5kb20oKSAqICNDQVJEX0xJU1QpICsgMV0KKQplbmQKZnVuY3Rpb24gSGFuZC5wcm90b3R5cGUuZHJhd0hhbmRDYXJkcyhzZWxmLCBzdGQpCl9fVFNfX0FycmF5Rm9yRWFjaCgKc2VsZi5jYXJkcywKZnVuY3Rpb24oX19fXywgY2FyZCkKY2FyZDpkcmF3Q2FyZChzdGQpCmVuZAopCmVuZApmdW5jdGlvbiBIYW5kLnByb3RvdHlwZS51cGRhdGVTdGF0ZShzZWxmLCBzdGQpCl9fVFNfX0FycmF5Rm9yRWFjaCgKc2VsZi5jYXJkcywKZnVuY3Rpb24oX19fXywgY2FyZCkKY2FyZDp1cGRhdGUoc3RkKQplbmQKKQplbmQKZnVuY3Rpb24gSGFuZC5wcm90b3R5cGUuc2V0Q2FyZHNQb3NpdGlvbihzZWxmLCBzY3JlZW5XaWR0aCwgc2NyZWVuSGVpZ2h0KQpsb2NhbCBuZXdQb3NpdGlvbiA9IF9fVFNfX05ldyhWZWN0b3IyLCAwLCAwKQpsb2NhbCBzcGFjaW5nID0gNTAKbG9jYWwgY2FyZFdpZHRoID0gMTI2CmxvY2FsIGNhcmRIZWlnaHQgPSAxODYKbG9jYWwgdG90YWxXaWR0aCA9ICNzZWxmLmNhcmRzICogc3BhY2luZyArICgjc2VsZi5jYXJkcyAtIDEpICogY2FyZFdpZHRoCmxvY2FsIHggPSAoc2NyZWVuV2lkdGggLSB0b3RhbFdpZHRoKSAvIDIKX19UU19fQXJyYXlGb3JFYWNoKApzZWxmLmNhcmRzLApmdW5jdGlvbihfX19fLCBjYXJkKQpjYXJkLnRyYW5zZm9ybS5wb3NpdGlvbiA9IF9fVFNfX05ldyhWZWN0b3IyLCB4LCBzY3JlZW5IZWlnaHQgLSBjYXJkSGVpZ2h0IC0gc3BhY2luZykKeCA9IHggKyAxNjAKZW5kCikKZW5kCmZ1bmN0aW9uIEhhbmQucHJvdG90eXBlLnNldEFjdGl2ZUNhcmQoc2VsZiwgc3VtKQppZiBzdW0gdGhlbgpwcmludCgiMCIpCmlmIHNlbGYuc2VsZWN0ZWRDYXJkID4gI3NlbGYuY2FyZHMgdGhlbgpzZWxmLnNlbGVjdGVkQ2FyZCA9IHNlbGYuc2VsZWN0ZWRDYXJkICsgMQplbmQKc2VsZi5jYXJkc1tzZWxmLnNlbGVjdGVkQ2FyZCArIDFdOnVwKCkKcHJpbnQoIjEiKQpkbwpsb2NhbCBpID0gMAp3aGlsZSBpIDwgI3NlbGYuY2FyZHMgZG8KcHJpbnQoIjIiKQpsb2NhbCBjYXJkID0gc2VsZi5jYXJkc1tpICsgMV0KaWYgaSB+PSBzZWxmLnNlbGVjdGVkQ2FyZCB0aGVuCnByaW50KCIzIikKY2FyZDpkb3duKCkKZW5kCmkgPSBpICsgMQplbmQKZW5kCmVsc2UKcHJpbnQoImVsc2UiKQppZiBzZWxmLnNlbGVjdGVkQ2FyZCA+IDAgdGhlbgpzZWxmLnNlbGVjdGVkQ2FyZCA9IHNlbGYuc2VsZWN0ZWRDYXJkIC0gMQplbmQKc2VsZi5jYXJkc1tzZWxmLnNlbGVjdGVkQ2FyZCArIDFdOnVwKCkKZG8KbG9jYWwgaSA9IDAKd2hpbGUgaSA8ICNzZWxmLmNhcmRzIGRvCmxvY2FsIGNhcmQgPSBzZWxmLmNhcmRzW2kgKyAxXQppZiBpIH49IHNlbGYuc2VsZWN0ZWRDYXJkIHRoZW4KY2FyZDpkb3duKCkKZW5kCmkgPSBpICsgMQplbmQKZW5kCmVuZApwcmludCgiZmltIikKZW5kCmxvY2FsIGhhbmQgPSBfX1RTX19OZXcoSGFuZCkKbG9jYWwgZnVuY3Rpb24gaW5pdChzdGQsIGdhbWUpCmhhbmQ6Z2VuZXJhdGVOZXdIYW5kKCkKaGFuZDpzZXRDYXJkc1Bvc2l0aW9uKGdhbWUud2lkdGgsIGdhbWUuaGVpZ2h0KQplbmQKbG9jYWwgZnVuY3Rpb24gbG9vcChzdGQsIGdhbWUpCmlmIHN0ZC5rZXkucHJlc3MubGVmdCB0aGVuCnByaW50KCJwcmVzc2VkIGxlZnQiKQpoYW5kOnNldEFjdGl2ZUNhcmQodHJ1ZSkKZW5kCmlmIHN0ZC5rZXkucHJlc3MucmlnaHQgdGhlbgpwcmludCgicHJlc3NlZCByaWdodCIpCmhhbmQ6c2V0QWN0aXZlQ2FyZChmYWxzZSkKZW5kCmhhbmQ6dXBkYXRlU3RhdGUoc3RkKQplbmQKbG9jYWwgZnVuY3Rpb24gZHJhdyhzdGQsIGdhbWUpCnN0ZC5kcmF3LmNsZWFyKHN0ZC5jb2xvci5ibGFjaykKaGFuZDpkcmF3SGFuZENhcmRzKHN0ZCkKZW5kCmxvY2FsIGZ1bmN0aW9uIGV4aXQoc3RkLCBnYW1lKQplbmQKX19fX2V4cG9ydHMuaW5pdCA9IGluaXQKX19fX2V4cG9ydHMubG9vcCA9IGxvb3AKX19fX2V4cG9ydHMuZHJhdyA9IGRyYXcKX19fX2V4cG9ydHMuZXhpdCA9IGV4aXQKcmV0dXJuIF9fX19leHBvcnRzCmVuZApnYW1lX3NyY19nYW1lT2JqZWN0XzEwZTllOCA9IGZ1bmN0aW9uKCkKbG9jYWwgZnVuY3Rpb24gX19UU19fQ2xhc3Moc2VsZikKbG9jYWwgYyA9IHtwcm90b3R5cGUgPSB7fX0KYy5wcm90b3R5cGUuX19pbmRleCA9IGMucHJvdG90eXBlCmMucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gYwpyZXR1cm4gYwplbmQKbG9jYWwgX19fX2V4cG9ydHMgPSB7fQpfX19fZXhwb3J0cy5WZWN0b3IyID0gX19UU19fQ2xhc3MoKQpsb2NhbCBWZWN0b3IyID0gX19fX2V4cG9ydHMuVmVjdG9yMgpWZWN0b3IyLm5hbWUgPSAiVmVjdG9yMiIKZnVuY3Rpb24gVmVjdG9yMi5wcm90b3R5cGUuX19fX2NvbnN0cnVjdG9yKHNlbGYsIHgsIHkpCnNlbGYueCA9IHgKc2VsZi55ID0geQplbmQKbG9jYWwgVHJhbnNmb3JtID0gX19UU19fQ2xhc3MoKQpUcmFuc2Zvcm0ubmFtZSA9ICJUcmFuc2Zvcm0iCmZ1bmN0aW9uIFRyYW5zZm9ybS5wcm90b3R5cGUuX19fX2NvbnN0cnVjdG9yKHNlbGYsIHBvc2l0aW9uLCBzY2FsZSkKc2VsZi5wb3NpdGlvbiA9IHBvc2l0aW9uCnNlbGYuc2NhbGUgPSBzY2FsZQplbmQKX19fX2V4cG9ydHMuR2FtZU9iamVjdCA9IF9fVFNfX0NsYXNzKCkKbG9jYWwgR2FtZU9iamVjdCA9IF9fX19leHBvcnRzLkdhbWVPYmplY3QKR2FtZU9iamVjdC5uYW1lID0gIkdhbWVPYmplY3QiCmZ1bmN0aW9uIEdhbWVPYmplY3QucHJvdG90eXBlLl9fX19jb25zdHJ1Y3RvcihzZWxmLCBwb3NpdGlvbiwgc2NhbGUpCmVuZApmdW5jdGlvbiBHYW1lT2JqZWN0LnByb3RvdHlwZS5kcmF3KHNlbGYsIHN0ZCkKc3RkLmRyYXcucmVjdCgKMCwKc2VsZi50cmFuc2Zvcm0ucG9zaXRpb24ueCwKc2VsZi50cmFuc2Zvcm0ucG9zaXRpb24ueSwKc2VsZi50cmFuc2Zvcm0uc2NhbGUueCwKc2VsZi50cmFuc2Zvcm0uc2NhbGUueQopCmVuZApmdW5jdGlvbiBHYW1lT2JqZWN0LnByb3RvdHlwZS51cGRhdGUoc2VsZiwgZHQpCnNlbGYuYW5pbWF0b3I6dXBkYXRlKGR0KQplbmQKZnVuY3Rpb24gR2FtZU9iamVjdC5wcm90b3R5cGUuc3RhcnQoc2VsZiwgcG9zaXRpb24sIGR1cmF0aW9uKQpzZWxmLmFuaW1hdG9yOnN0YXJ0KHBvc2l0aW9uLCBkdXJhdGlvbikKZW5kCmxvY2FsIEFuaW1hdGlvbkNvbnRyb2xsZXIgPSBfX1RTX19DbGFzcygpCkFuaW1hdGlvbkNvbnRyb2xsZXIubmFtZSA9ICJBbmltYXRpb25Db250cm9sbGVyIgpmdW5jdGlvbiBBbmltYXRpb25Db250cm9sbGVyLnByb3RvdHlwZS5fX19fY29uc3RydWN0b3Ioc2VsZiwgb2JqKQpzZWxmLm9iaiA9IG9iagpzZWxmLmFjdGl2ZSA9IGZhbHNlCnNlbGYuZHVyYXRpb24gPSAwCnNlbGYuZWxhcHNlZCA9IDAKZW5kCmZ1bmN0aW9uIEFuaW1hdGlvbkNvbnRyb2xsZXIucHJvdG90eXBlLnN0YXJ0KHNlbGYsIHBvc2l0aW9uLCBkdXJhdGlvbikKc2VsZi5zdGFydFBvc2l0aW9uID0gc2VsZi5vYmoudHJhbnNmb3JtLnBvc2l0aW9uCnNlbGYuZW5kUG9zaXRpb24gPSBwb3NpdGlvbgpzZWxmLmR1cmF0aW9uID0gZHVyYXRpb24Kc2VsZi5lbGFwc2VkID0gMApzZWxmLmFjdGl2ZSA9IHRydWUKZW5kCmZ1bmN0aW9uIEFuaW1hdGlvbkNvbnRyb2xsZXIucHJvdG90eXBlLnVwZGF0ZShzZWxmLCBkdCkKaWYgbm90IHNlbGYuYWN0aXZlIHRoZW4KcmV0dXJuCmVuZApzZWxmLmVsYXBzZWQgPSBzZWxmLmVsYXBzZWQgKyBkdCAvIDEwMDAKbG9jYWwgdCA9IG1hdGgubWluKHNlbGYuZWxhcHNlZCAvIHNlbGYuZHVyYXRpb24sIDEpCmxvY2FsIGVhc2VkVCA9IDEgLSAoMSAtIHQpIF4gNQpzZWxmLm9iai50cmFuc2Zvcm0ucG9zaXRpb24ueCA9IHNlbGYuc3RhcnRQb3NpdGlvbi54ICsgKHNlbGYuZW5kUG9zaXRpb24ueCAtIHNlbGYuc3RhcnRQb3NpdGlvbi54KSAqIGVhc2VkVApzZWxmLm9iai50cmFuc2Zvcm0ucG9zaXRpb24ueSA9IHNlbGYuc3RhcnRQb3NpdGlvbi55ICsgKHNlbGYuZW5kUG9zaXRpb24ueSAtIHNlbGYuc3RhcnRQb3NpdGlvbi55KSAqIGVhc2VkVAppZiBlYXNlZFQgPj0gMSB0aGVuCnNlbGYuYWN0aXZlID0gZmFsc2UKc2VsZi5vYmoudHJhbnNmb3JtLnBvc2l0aW9uLnggPSBzZWxmLmVuZFBvc2l0aW9uLngKc2VsZi5vYmoudHJhbnNmb3JtLnBvc2l0aW9uLnkgPSBzZWxmLmVuZFBvc2l0aW9uLnkKZW5kCmVuZApyZXR1cm4gX19fX2V4cG9ydHMKZW5kCi0tCnJldHVybiBtYWluXzFjMGM3MCgpCgA=')
window.game_code=atob('bG9jYWwgZ2FtZV9zcmNfZ2FtZU9iamVjdF8xZGZiNzggPSBuaWwKbG9jYWwgZnVuY3Rpb24gbWFpbl8xZGQxOTgoKQpsb2NhbCBmdW5jdGlvbiBfX1RTX19DbGFzcyhzZWxmKQpsb2NhbCBjID0ge3Byb3RvdHlwZSA9IHt9fQpjLnByb3RvdHlwZS5fX2luZGV4ID0gYy5wcm90b3R5cGUKYy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBjCnJldHVybiBjCmVuZApsb2NhbCBmdW5jdGlvbiBfX1RTX19DbGFzc0V4dGVuZHModGFyZ2V0LCBiYXNlKQp0YXJnZXQuX19fX3N1cGVyID0gYmFzZQpsb2NhbCBzdGF0aWNNZXRhdGFibGUgPSBzZXRtZXRhdGFibGUoe19faW5kZXggPSBiYXNlfSwgYmFzZSkKc2V0bWV0YXRhYmxlKHRhcmdldCwgc3RhdGljTWV0YXRhYmxlKQpsb2NhbCBiYXNlTWV0YXRhYmxlID0gZ2V0bWV0YXRhYmxlKGJhc2UpCmlmIGJhc2VNZXRhdGFibGUgdGhlbgppZiB0eXBlKGJhc2VNZXRhdGFibGUuX19pbmRleCkgPT0gImZ1bmN0aW9uIiB0aGVuCnN0YXRpY01ldGF0YWJsZS5fX2luZGV4ID0gYmFzZU1ldGF0YWJsZS5fX2luZGV4CmVuZAppZiB0eXBlKGJhc2VNZXRhdGFibGUuX19uZXdpbmRleCkgPT0gImZ1bmN0aW9uIiB0aGVuCnN0YXRpY01ldGF0YWJsZS5fX25ld2luZGV4ID0gYmFzZU1ldGF0YWJsZS5fX25ld2luZGV4CmVuZAplbmQKc2V0bWV0YXRhYmxlKHRhcmdldC5wcm90b3R5cGUsIGJhc2UucHJvdG90eXBlKQppZiB0eXBlKGJhc2UucHJvdG90eXBlLl9faW5kZXgpID09ICJmdW5jdGlvbiIgdGhlbgp0YXJnZXQucHJvdG90eXBlLl9faW5kZXggPSBiYXNlLnByb3RvdHlwZS5fX2luZGV4CmVuZAppZiB0eXBlKGJhc2UucHJvdG90eXBlLl9fbmV3aW5kZXgpID09ICJmdW5jdGlvbiIgdGhlbgp0YXJnZXQucHJvdG90eXBlLl9fbmV3aW5kZXggPSBiYXNlLnByb3RvdHlwZS5fX25ld2luZGV4CmVuZAppZiB0eXBlKGJhc2UucHJvdG90eXBlLl9fdG9zdHJpbmcpID09ICJmdW5jdGlvbiIgdGhlbgp0YXJnZXQucHJvdG90eXBlLl9fdG9zdHJpbmcgPSBiYXNlLnByb3RvdHlwZS5fX3Rvc3RyaW5nCmVuZAplbmQKbG9jYWwgZnVuY3Rpb24gX19UU19fTmV3KHRhcmdldCwgLi4uKQpsb2NhbCBpbnN0YW5jZSA9IHNldG1ldGF0YWJsZSh7fSwgdGFyZ2V0LnByb3RvdHlwZSkKaW5zdGFuY2U6X19fX2NvbnN0cnVjdG9yKC4uLikKcmV0dXJuIGluc3RhbmNlCmVuZApsb2NhbCBmdW5jdGlvbiBfX1RTX19BcnJheUZvckVhY2goc2VsZiwgY2FsbGJhY2tGbiwgdGhpc0FyZykKZm9yIGkgPSAxLCAjc2VsZiBkbwpjYWxsYmFja0ZuKHRoaXNBcmcsIHNlbGZbaV0sIGkgLSAxLCBzZWxmKQplbmQKZW5kCmxvY2FsIF9fX19leHBvcnRzID0ge30KbG9jYWwgX19fX2dhbWVPYmplY3QgPSBnYW1lX3NyY19nYW1lT2JqZWN0XzFkZmI3OCgpCmxvY2FsIFZlY3RvcjIgPSBfX19fZ2FtZU9iamVjdC5WZWN0b3IyCmxvY2FsIEdhbWVPYmplY3QgPSBfX19fZ2FtZU9iamVjdC5HYW1lT2JqZWN0Cl9fX19leHBvcnRzLnRpdGxlID0gIkdseSBFbmdpbmUgR2FtZWphbSIKX19fX2V4cG9ydHMuYXV0aG9yID0gIkFsZXggT2xpdmVpcmEiCl9fX19leHBvcnRzLnZlcnNpb24gPSAiMS4wLjAiCl9fX19leHBvcnRzLmRlc2NyaXB0aW9uID0gIlRoZSBiZXN0IGdhbWUgaW4gdGhlIHdvcmxkIG1hZGUgaW4gR2x5RW5naW5lIgpsb2NhbCBDQVJEX0xJU1QgPSB7e2lkID0gImVtcGVyb3IiLCBuYW1lID0gIkVtcGVyb3IiLCB0ZXh0dXJlID0gImNhcmQxLnBuZyJ9LCB7aWQgPSAiaGlnaF9wcmllc3Rlc3MiLCBuYW1lID0gIkhpZ2ggUHJpZXN0ZXNzIiwgdGV4dHVyZSA9ICJjYXJkMi5wbmcifSwge2lkID0gInN1biIsIG5hbWUgPSAiU3VuIiwgdGV4dHVyZSA9ICJjYXJkMy5wbmcifSwge2lkID0gIm1hZ2ljaWFuIiwgbmFtZSA9ICJNYWdpY2lhbiIsIHRleHR1cmUgPSAiY2FyZDQucG5nIn19CmxvY2FsIENhcmQgPSBfX1RTX19DbGFzcygpCkNhcmQubmFtZSA9ICJDYXJkIgpfX1RTX19DbGFzc0V4dGVuZHMoQ2FyZCwgR2FtZU9iamVjdCkKZnVuY3Rpb24gQ2FyZC5wcm90b3R5cGUuX19fX2NvbnN0cnVjdG9yKHNlbGYsIGNhcmRJbmZvKQpHYW1lT2JqZWN0LnByb3RvdHlwZS5fX19fY29uc3RydWN0b3IoCnNlbGYsCl9fVFNfX05ldyhWZWN0b3IyLCAxMDAsIDEwMCksCl9fVFNfX05ldyhWZWN0b3IyLCAxMDAsIDEwMCkKKQpzZWxmLmlzVXAgPSBmYWxzZQpzZWxmLmlkID0gY2FyZEluZm8uaWQKc2VsZi5uYW1lID0gY2FyZEluZm8ubmFtZQpzZWxmLnRleHR1cmUgPSBjYXJkSW5mby50ZXh0dXJlCmVuZApmdW5jdGlvbiBDYXJkLnByb3RvdHlwZS51cChzZWxmKQpwcmludCgiY2FyZCB1cCIpCnNlbGY6c3RhcnQoe3ggPSBzZWxmLnRyYW5zZm9ybS5wb3NpdGlvbi54LCB5ID0gc2VsZi50cmFuc2Zvcm0ucG9zaXRpb24ueSAtIDUwfSwgMC41KQpzZWxmLmlzVXAgPSB0cnVlCmVuZApmdW5jdGlvbiBDYXJkLnByb3RvdHlwZS5kb3duKHNlbGYpCmlmIG5vdCBzZWxmLmlzVXAgdGhlbgpyZXR1cm4KZW5kCnByaW50KCJjYXJkIGRvd24iKQpzZWxmOnN0YXJ0KHt4ID0gc2VsZi50cmFuc2Zvcm0ucG9zaXRpb24ueCwgeSA9IHNlbGYudHJhbnNmb3JtLnBvc2l0aW9uLnkgKyA1MH0sIDAuNSkKc2VsZi5pc1VwID0gZmFsc2UKZW5kCmZ1bmN0aW9uIENhcmQucHJvdG90eXBlLmRyYXdDYXJkKHNlbGYsIHN0ZCkKc3RkLmRyYXcuaW1hZ2Uoc2VsZi50ZXh0dXJlLCBzZWxmLnRyYW5zZm9ybS5wb3NpdGlvbi54LCBzZWxmLnRyYW5zZm9ybS5wb3NpdGlvbi55KQplbmQKbG9jYWwgSGFuZCA9IF9fVFNfX0NsYXNzKCkKSGFuZC5uYW1lID0gIkhhbmQiCmZ1bmN0aW9uIEhhbmQucHJvdG90eXBlLl9fX19jb25zdHJ1Y3RvcihzZWxmKQpzZWxmLmNhcmRzID0ge30Kc2VsZi5zZWxlY3RlZENhcmQgPSAwCmVuZApmdW5jdGlvbiBIYW5kLnByb3RvdHlwZS5nZW5lcmF0ZU5ld0hhbmQoc2VsZikKcHJpbnQoIiMgR2VuZXJhdGluZyBOZXcgSGFuZCAjIikKbG9jYWwgbmV3Q2FyZCA9IG5pbApkbwpsb2NhbCBpID0gMAp3aGlsZSBpIDwgMyBkbwpuZXdDYXJkID0gc2VsZjpnZXROZXdDYXJkKCkKcHJpbnQoIkdldCBjYXJkIHdpdGggc3VjY2VzczoiLCBuZXdDYXJkKQpsb2NhbCBjYXJkQ291bnQgPSAwCmRvCmxvY2FsIG4gPSAwCndoaWxlIG4gPCAjc2VsZi5jYXJkcyBkbwppZiBjYXJkQ291bnQgPT0gMiB0aGVuCmJyZWFrCmVuZApsb2NhbCBjYXJkID0gc2VsZi5jYXJkc1tuICsgMV0KaWYgY2FyZC5pZCA9PSBuZXdDYXJkLmlkIHRoZW4KY2FyZENvdW50ID0gY2FyZENvdW50ICsgMQplbmQKbiA9IG4gKyAxCmVuZAplbmQKaWYgY2FyZENvdW50ID49IDIgdGhlbgpsb2NhbCByZXNlcnZlQ2FyZCA9IHNlbGY6Z2V0TmV3Q2FyZCgpCndoaWxlIG5ld0NhcmQuaWQgPT0gcmVzZXJ2ZUNhcmQuaWQgZG8KcmVzZXJ2ZUNhcmQgPSBzZWxmOmdldE5ld0NhcmQoKQplbmQKbG9jYWwgX19fX3NlbGZfY2FyZHNfMCA9IHNlbGYuY2FyZHMKX19fX3NlbGZfY2FyZHNfMFsjX19fX3NlbGZfY2FyZHNfMCArIDFdID0gcmVzZXJ2ZUNhcmQKZWxzZQpsb2NhbCBfX19fc2VsZl9jYXJkc18xID0gc2VsZi5jYXJkcwpfX19fc2VsZl9jYXJkc18xWyNfX19fc2VsZl9jYXJkc18xICsgMV0gPSBuZXdDYXJkCmVuZAppID0gaSArIDEKZW5kCmVuZApwcmludCgiRmluaXNoZWQgZ2VuZXJhdGluZyBuZXcgaGFuZCEiKQplbmQKZnVuY3Rpb24gSGFuZC5wcm90b3R5cGUuZ2V0TmV3Q2FyZChzZWxmKQpwcmludCgiR2VuZXJhdGluZyBDYXJkLi4uIikKcmV0dXJuIF9fVFNfX05ldygKQ2FyZCwKQ0FSRF9MSVNUW21hdGguZmxvb3IobWF0aC5yYW5kb20oKSAqICNDQVJEX0xJU1QpICsgMV0KKQplbmQKZnVuY3Rpb24gSGFuZC5wcm90b3R5cGUuZHJhd0hhbmRDYXJkcyhzZWxmLCBzdGQpCl9fVFNfX0FycmF5Rm9yRWFjaCgKc2VsZi5jYXJkcywKZnVuY3Rpb24oX19fXywgY2FyZCkKY2FyZDpkcmF3Q2FyZChzdGQpCmVuZAopCmVuZApmdW5jdGlvbiBIYW5kLnByb3RvdHlwZS51cGRhdGVTdGF0ZShzZWxmLCBzdGQpCl9fVFNfX0FycmF5Rm9yRWFjaCgKc2VsZi5jYXJkcywKZnVuY3Rpb24oX19fXywgY2FyZCkKY2FyZDp1cGRhdGUoc3RkKQplbmQKKQplbmQKZnVuY3Rpb24gSGFuZC5wcm90b3R5cGUuc2V0Q2FyZHNQb3NpdGlvbihzZWxmLCBzY3JlZW5XaWR0aCwgc2NyZWVuSGVpZ2h0KQpsb2NhbCBuZXdQb3NpdGlvbiA9IF9fVFNfX05ldyhWZWN0b3IyLCAwLCAwKQpsb2NhbCBzcGFjaW5nID0gNTAKbG9jYWwgY2FyZFdpZHRoID0gMTI2CmxvY2FsIGNhcmRIZWlnaHQgPSAxODYKbG9jYWwgdG90YWxXaWR0aCA9ICNzZWxmLmNhcmRzICogc3BhY2luZyArICgjc2VsZi5jYXJkcyAtIDEpICogY2FyZFdpZHRoCmxvY2FsIHggPSAoc2NyZWVuV2lkdGggLSB0b3RhbFdpZHRoKSAvIDIKX19UU19fQXJyYXlGb3JFYWNoKApzZWxmLmNhcmRzLApmdW5jdGlvbihfX19fLCBjYXJkKQpjYXJkLnRyYW5zZm9ybS5wb3NpdGlvbiA9IF9fVFNfX05ldyhWZWN0b3IyLCB4LCBzY3JlZW5IZWlnaHQgLSBjYXJkSGVpZ2h0IC0gc3BhY2luZykKeCA9IHggKyAxNjAKZW5kCikKZW5kCmZ1bmN0aW9uIEhhbmQucHJvdG90eXBlLnNldEFjdGl2ZUNhcmQoc2VsZiwgc3VtKQppZiBzdW0gdGhlbgpwcmludCgiMCIpCmlmIHNlbGYuc2VsZWN0ZWRDYXJkID4gI3NlbGYuY2FyZHMgdGhlbgpzZWxmLnNlbGVjdGVkQ2FyZCA9IHNlbGYuc2VsZWN0ZWRDYXJkICsgMQplbmQKc2VsZi5jYXJkc1tzZWxmLnNlbGVjdGVkQ2FyZCArIDFdOnVwKCkKcHJpbnQoIjEiKQpkbwpsb2NhbCBpID0gMAp3aGlsZSBpIDwgI3NlbGYuY2FyZHMgZG8KcHJpbnQoIjIiKQpsb2NhbCBjYXJkID0gc2VsZi5jYXJkc1tpICsgMV0KaWYgaSB+PSBzZWxmLnNlbGVjdGVkQ2FyZCB0aGVuCnByaW50KCIzIikKY2FyZDpkb3duKCkKZW5kCmkgPSBpICsgMQplbmQKZW5kCmVsc2UKcHJpbnQoImVsc2UiKQppZiBzZWxmLnNlbGVjdGVkQ2FyZCA+IDAgdGhlbgpzZWxmLnNlbGVjdGVkQ2FyZCA9IHNlbGYuc2VsZWN0ZWRDYXJkIC0gMQplbmQKc2VsZi5jYXJkc1tzZWxmLnNlbGVjdGVkQ2FyZCArIDFdOnVwKCkKZG8KbG9jYWwgaSA9IDAKd2hpbGUgaSA8ICNzZWxmLmNhcmRzIGRvCmxvY2FsIGNhcmQgPSBzZWxmLmNhcmRzW2kgKyAxXQppZiBpIH49IHNlbGYuc2VsZWN0ZWRDYXJkIHRoZW4KY2FyZDpkb3duKCkKZW5kCmkgPSBpICsgMQplbmQKZW5kCmVuZApwcmludCgiZmltIikKZW5kCmxvY2FsIGhhbmQgPSBfX1RTX19OZXcoSGFuZCkKbG9jYWwgZnVuY3Rpb24gaW5pdChzdGQsIGdhbWUpCmhhbmQ6Z2VuZXJhdGVOZXdIYW5kKCkKaGFuZDpzZXRDYXJkc1Bvc2l0aW9uKGdhbWUud2lkdGgsIGdhbWUuaGVpZ2h0KQplbmQKbG9jYWwgZnVuY3Rpb24gbG9vcChzdGQsIGdhbWUpCmlmIHN0ZC5rZXkucHJlc3MubGVmdCB0aGVuCnByaW50KCJwcmVzc2VkIGxlZnQiKQpoYW5kOnNldEFjdGl2ZUNhcmQodHJ1ZSkKZW5kCmlmIHN0ZC5rZXkucHJlc3MucmlnaHQgdGhlbgpwcmludCgicHJlc3NlZCByaWdodCIpCmhhbmQ6c2V0QWN0aXZlQ2FyZChmYWxzZSkKZW5kCmhhbmQ6dXBkYXRlU3RhdGUoc3RkKQplbmQKbG9jYWwgZnVuY3Rpb24gZHJhdyhzdGQsIGdhbWUpCnN0ZC5kcmF3LmNsZWFyKHN0ZC5jb2xvci5ibGFjaykKaGFuZDpkcmF3SGFuZENhcmRzKHN0ZCkKZW5kCmxvY2FsIGZ1bmN0aW9uIGV4aXQoc3RkLCBnYW1lKQplbmQKX19fX2V4cG9ydHMuaW5pdCA9IGluaXQKX19fX2V4cG9ydHMubG9vcCA9IGxvb3AKX19fX2V4cG9ydHMuZHJhdyA9IGRyYXcKX19fX2V4cG9ydHMuZXhpdCA9IGV4aXQKcmV0dXJuIF9fX19leHBvcnRzCmVuZApnYW1lX3NyY19nYW1lT2JqZWN0XzFkZmI3OCA9IGZ1bmN0aW9uKCkKbG9jYWwgZnVuY3Rpb24gX19UU19fQ2xhc3Moc2VsZikKbG9jYWwgYyA9IHtwcm90b3R5cGUgPSB7fX0KYy5wcm90b3R5cGUuX19pbmRleCA9IGMucHJvdG90eXBlCmMucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gYwpyZXR1cm4gYwplbmQKbG9jYWwgZnVuY3Rpb24gX19UU19fTmV3KHRhcmdldCwgLi4uKQpsb2NhbCBpbnN0YW5jZSA9IHNldG1ldGF0YWJsZSh7fSwgdGFyZ2V0LnByb3RvdHlwZSkKaW5zdGFuY2U6X19fX2NvbnN0cnVjdG9yKC4uLikKcmV0dXJuIGluc3RhbmNlCmVuZApsb2NhbCBfX19fZXhwb3J0cyA9IHt9CmxvY2FsIEFuaW1hdGlvbkNvbnRyb2xsZXIKX19fX2V4cG9ydHMuVmVjdG9yMiA9IF9fVFNfX0NsYXNzKCkKbG9jYWwgVmVjdG9yMiA9IF9fX19leHBvcnRzLlZlY3RvcjIKVmVjdG9yMi5uYW1lID0gIlZlY3RvcjIiCmZ1bmN0aW9uIFZlY3RvcjIucHJvdG90eXBlLl9fX19jb25zdHJ1Y3RvcihzZWxmLCB4LCB5KQpzZWxmLnggPSB4CnNlbGYueSA9IHkKZW5kCmxvY2FsIFRyYW5zZm9ybSA9IF9fVFNfX0NsYXNzKCkKVHJhbnNmb3JtLm5hbWUgPSAiVHJhbnNmb3JtIgpmdW5jdGlvbiBUcmFuc2Zvcm0ucHJvdG90eXBlLl9fX19jb25zdHJ1Y3RvcihzZWxmLCBwb3NpdGlvbiwgc2NhbGUpCnNlbGYucG9zaXRpb24gPSBwb3NpdGlvbgpzZWxmLnNjYWxlID0gc2NhbGUKZW5kCl9fX19leHBvcnRzLkdhbWVPYmplY3QgPSBfX1RTX19DbGFzcygpCmxvY2FsIEdhbWVPYmplY3QgPSBfX19fZXhwb3J0cy5HYW1lT2JqZWN0CkdhbWVPYmplY3QubmFtZSA9ICJHYW1lT2JqZWN0IgpmdW5jdGlvbiBHYW1lT2JqZWN0LnByb3RvdHlwZS5fX19fY29uc3RydWN0b3Ioc2VsZiwgcG9zaXRpb24sIHNjYWxlKQpzZWxmLnRyYW5zZm9ybSA9IF9fVFNfX05ldyhUcmFuc2Zvcm0sIHBvc2l0aW9uLCBzY2FsZSkKc2VsZi5hbmltYXRvciA9IF9fVFNfX05ldyhBbmltYXRpb25Db250cm9sbGVyLCBzZWxmKQplbmQKZnVuY3Rpb24gR2FtZU9iamVjdC5wcm90b3R5cGUuZHJhdyhzZWxmLCBzdGQpCnN0ZC5kcmF3LnJlY3QoCjAsCnNlbGYudHJhbnNmb3JtLnBvc2l0aW9uLngsCnNlbGYudHJhbnNmb3JtLnBvc2l0aW9uLnksCnNlbGYudHJhbnNmb3JtLnNjYWxlLngsCnNlbGYudHJhbnNmb3JtLnNjYWxlLnkKKQplbmQKZnVuY3Rpb24gR2FtZU9iamVjdC5wcm90b3R5cGUudXBkYXRlKHNlbGYsIGR0KQpzZWxmLmFuaW1hdG9yOnVwZGF0ZShkdCkKZW5kCmZ1bmN0aW9uIEdhbWVPYmplY3QucHJvdG90eXBlLnN0YXJ0KHNlbGYsIHBvc2l0aW9uLCBkdXJhdGlvbikKc2VsZi5hbmltYXRvcjpzdGFydChwb3NpdGlvbiwgZHVyYXRpb24pCmVuZApBbmltYXRpb25Db250cm9sbGVyID0gX19UU19fQ2xhc3MoKQpBbmltYXRpb25Db250cm9sbGVyLm5hbWUgPSAiQW5pbWF0aW9uQ29udHJvbGxlciIKZnVuY3Rpb24gQW5pbWF0aW9uQ29udHJvbGxlci5wcm90b3R5cGUuX19fX2NvbnN0cnVjdG9yKHNlbGYsIG9iaikKc2VsZi5vYmogPSBvYmoKc2VsZi5hY3RpdmUgPSBmYWxzZQpzZWxmLmR1cmF0aW9uID0gMApzZWxmLmVsYXBzZWQgPSAwCmVuZApmdW5jdGlvbiBBbmltYXRpb25Db250cm9sbGVyLnByb3RvdHlwZS5zdGFydChzZWxmLCBwb3NpdGlvbiwgZHVyYXRpb24pCnNlbGYuc3RhcnRQb3NpdGlvbiA9IHNlbGYub2JqLnRyYW5zZm9ybS5wb3NpdGlvbgpzZWxmLmVuZFBvc2l0aW9uID0gcG9zaXRpb24Kc2VsZi5kdXJhdGlvbiA9IGR1cmF0aW9uCnNlbGYuZWxhcHNlZCA9IDAKc2VsZi5hY3RpdmUgPSB0cnVlCmVuZApmdW5jdGlvbiBBbmltYXRpb25Db250cm9sbGVyLnByb3RvdHlwZS51cGRhdGUoc2VsZiwgZHQpCmlmIG5vdCBzZWxmLmFjdGl2ZSB0aGVuCnJldHVybgplbmQKc2VsZi5lbGFwc2VkID0gc2VsZi5lbGFwc2VkICsgZHQgLyAxMDAwCmxvY2FsIHQgPSBtYXRoLm1pbihzZWxmLmVsYXBzZWQgLyBzZWxmLmR1cmF0aW9uLCAxKQpsb2NhbCBlYXNlZFQgPSAxIC0gKDEgLSB0KSBeIDUKc2VsZi5vYmoudHJhbnNmb3JtLnBvc2l0aW9uLnggPSBzZWxmLnN0YXJ0UG9zaXRpb24ueCArIChzZWxmLmVuZFBvc2l0aW9uLnggLSBzZWxmLnN0YXJ0UG9zaXRpb24ueCkgKiBlYXNlZFQKc2VsZi5vYmoudHJhbnNmb3JtLnBvc2l0aW9uLnkgPSBzZWxmLnN0YXJ0UG9zaXRpb24ueSArIChzZWxmLmVuZFBvc2l0aW9uLnkgLSBzZWxmLnN0YXJ0UG9zaXRpb24ueSkgKiBlYXNlZFQKaWYgZWFzZWRUID49IDEgdGhlbgpzZWxmLmFjdGl2ZSA9IGZhbHNlCnNlbGYub2JqLnRyYW5zZm9ybS5wb3NpdGlvbi54ID0gc2VsZi5lbmRQb3NpdGlvbi54CnNlbGYub2JqLnRyYW5zZm9ybS5wb3NpdGlvbi55ID0gc2VsZi5lbmRQb3NpdGlvbi55CmVuZAplbmQKcmV0dXJuIF9fX19leHBvcnRzCmVuZAotLQpyZXR1cm4gbWFpbl8xZGQxOTgoKQo=')
window.game_code=atob('')
window.game_code=atob('')
window.game_code=atob('bG9jYWwgZ2FtZV9zcmNfZ2FtZU9iamVjdF8xZGJkYzggPSBuaWwKbG9jYWwgZnVuY3Rpb24gbWFpbl8xYjA3MDAoKQpsb2NhbCBmdW5jdGlvbiBfX1RTX19DbGFzcyhzZWxmKQpsb2NhbCBjID0ge3Byb3RvdHlwZSA9IHt9fQpjLnByb3RvdHlwZS5fX2luZGV4ID0gYy5wcm90b3R5cGUKYy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBjCnJldHVybiBjCmVuZApsb2NhbCBmdW5jdGlvbiBfX1RTX19DbGFzc0V4dGVuZHModGFyZ2V0LCBiYXNlKQp0YXJnZXQuX19fX3N1cGVyID0gYmFzZQpsb2NhbCBzdGF0aWNNZXRhdGFibGUgPSBzZXRtZXRhdGFibGUoe19faW5kZXggPSBiYXNlfSwgYmFzZSkKc2V0bWV0YXRhYmxlKHRhcmdldCwgc3RhdGljTWV0YXRhYmxlKQpsb2NhbCBiYXNlTWV0YXRhYmxlID0gZ2V0bWV0YXRhYmxlKGJhc2UpCmlmIGJhc2VNZXRhdGFibGUgdGhlbgppZiB0eXBlKGJhc2VNZXRhdGFibGUuX19pbmRleCkgPT0gImZ1bmN0aW9uIiB0aGVuCnN0YXRpY01ldGF0YWJsZS5fX2luZGV4ID0gYmFzZU1ldGF0YWJsZS5fX2luZGV4CmVuZAppZiB0eXBlKGJhc2VNZXRhdGFibGUuX19uZXdpbmRleCkgPT0gImZ1bmN0aW9uIiB0aGVuCnN0YXRpY01ldGF0YWJsZS5fX25ld2luZGV4ID0gYmFzZU1ldGF0YWJsZS5fX25ld2luZGV4CmVuZAplbmQKc2V0bWV0YXRhYmxlKHRhcmdldC5wcm90b3R5cGUsIGJhc2UucHJvdG90eXBlKQppZiB0eXBlKGJhc2UucHJvdG90eXBlLl9faW5kZXgpID09ICJmdW5jdGlvbiIgdGhlbgp0YXJnZXQucHJvdG90eXBlLl9faW5kZXggPSBiYXNlLnByb3RvdHlwZS5fX2luZGV4CmVuZAppZiB0eXBlKGJhc2UucHJvdG90eXBlLl9fbmV3aW5kZXgpID09ICJmdW5jdGlvbiIgdGhlbgp0YXJnZXQucHJvdG90eXBlLl9fbmV3aW5kZXggPSBiYXNlLnByb3RvdHlwZS5fX25ld2luZGV4CmVuZAppZiB0eXBlKGJhc2UucHJvdG90eXBlLl9fdG9zdHJpbmcpID09ICJmdW5jdGlvbiIgdGhlbgp0YXJnZXQucHJvdG90eXBlLl9fdG9zdHJpbmcgPSBiYXNlLnByb3RvdHlwZS5fX3Rvc3RyaW5nCmVuZAplbmQKbG9jYWwgZnVuY3Rpb24gX19UU19fTmV3KHRhcmdldCwgLi4uKQpsb2NhbCBpbnN0YW5jZSA9IHNldG1ldGF0YWJsZSh7fSwgdGFyZ2V0LnByb3RvdHlwZSkKaW5zdGFuY2U6X19fX2NvbnN0cnVjdG9yKC4uLikKcmV0dXJuIGluc3RhbmNlCmVuZApsb2NhbCBmdW5jdGlvbiBfX1RTX19BcnJheUZvckVhY2goc2VsZiwgY2FsbGJhY2tGbiwgdGhpc0FyZykKZm9yIGkgPSAxLCAjc2VsZiBkbwpjYWxsYmFja0ZuKHRoaXNBcmcsIHNlbGZbaV0sIGkgLSAxLCBzZWxmKQplbmQKZW5kCmxvY2FsIF9fX19leHBvcnRzID0ge30KbG9jYWwgX19fX2dhbWVPYmplY3QgPSBnYW1lX3NyY19nYW1lT2JqZWN0XzFkYmRjOCgpCmxvY2FsIFZlY3RvcjIgPSBfX19fZ2FtZU9iamVjdC5WZWN0b3IyCmxvY2FsIEdhbWVPYmplY3QgPSBfX19fZ2FtZU9iamVjdC5HYW1lT2JqZWN0Cl9fX19leHBvcnRzLnRpdGxlID0gIkdseSBFbmdpbmUgR2FtZWphbSIKX19fX2V4cG9ydHMuYXV0aG9yID0gIkFsZXggT2xpdmVpcmEiCl9fX19leHBvcnRzLnZlcnNpb24gPSAiMS4wLjAiCl9fX19leHBvcnRzLmRlc2NyaXB0aW9uID0gIlRoZSBiZXN0IGdhbWUgaW4gdGhlIHdvcmxkIG1hZGUgaW4gR2x5RW5naW5lIgpsb2NhbCBDQVJEX0xJU1QgPSB7e2lkID0gImVtcGVyb3IiLCBuYW1lID0gIkVtcGVyb3IiLCB0ZXh0dXJlID0gImNhcmQxLnBuZyJ9LCB7aWQgPSAiaGlnaF9wcmllc3Rlc3MiLCBuYW1lID0gIkhpZ2ggUHJpZXN0ZXNzIiwgdGV4dHVyZSA9ICJjYXJkMi5wbmcifSwge2lkID0gInN1biIsIG5hbWUgPSAiU3VuIiwgdGV4dHVyZSA9ICJjYXJkMy5wbmcifSwge2lkID0gIm1hZ2ljaWFuIiwgbmFtZSA9ICJNYWdpY2lhbiIsIHRleHR1cmUgPSAiY2FyZDQucG5nIn19CmxvY2FsIENhcmQgPSBfX1RTX19DbGFzcygpCkNhcmQubmFtZSA9ICJDYXJkIgpfX1RTX19DbGFzc0V4dGVuZHMoQ2FyZCwgR2FtZU9iamVjdCkKZnVuY3Rpb24gQ2FyZC5wcm90b3R5cGUuX19fX2NvbnN0cnVjdG9yKHNlbGYsIGNhcmRJbmZvKQpHYW1lT2JqZWN0LnByb3RvdHlwZS5fX19fY29uc3RydWN0b3IoCnNlbGYsCl9fVFNfX05ldyhWZWN0b3IyLCAxMDAsIDEwMCksCl9fVFNfX05ldyhWZWN0b3IyLCAxMDAsIDEwMCkKKQpzZWxmLmlzVXAgPSBmYWxzZQpzZWxmLmlkID0gY2FyZEluZm8uaWQKc2VsZi5uYW1lID0gY2FyZEluZm8ubmFtZQpzZWxmLnRleHR1cmUgPSBjYXJkSW5mby50ZXh0dXJlCmVuZApmdW5jdGlvbiBDYXJkLnByb3RvdHlwZS51cChzZWxmKQpwcmludCgiY2FyZCB1cCIpCnNlbGY6c3RhcnQoe3ggPSBzZWxmLnRyYW5zZm9ybS5wb3NpdGlvbi54LCB5ID0gc2VsZi50cmFuc2Zvcm0ucG9zaXRpb24ueSAtIDUwfSwgMC41KQpzZWxmLmlzVXAgPSB0cnVlCmVuZApmdW5jdGlvbiBDYXJkLnByb3RvdHlwZS5kb3duKHNlbGYpCmlmIG5vdCBzZWxmLmlzVXAgdGhlbgpyZXR1cm4KZW5kCnByaW50KCJjYXJkIGRvd24iKQpzZWxmOnN0YXJ0KHt4ID0gc2VsZi50cmFuc2Zvcm0ucG9zaXRpb24ueCwgeSA9IHNlbGYudHJhbnNmb3JtLnBvc2l0aW9uLnkgKyA1MH0sIDAuNSkKc2VsZi5pc1VwID0gZmFsc2UKZW5kCmZ1bmN0aW9uIENhcmQucHJvdG90eXBlLmRyYXdDYXJkKHNlbGYsIHN0ZCkKc3RkLmRyYXcuaW1hZ2Uoc2VsZi50ZXh0dXJlLCBzZWxmLnRyYW5zZm9ybS5wb3NpdGlvbi54LCBzZWxmLnRyYW5zZm9ybS5wb3NpdGlvbi55KQplbmQKbG9jYWwgSGFuZCA9IF9fVFNfX0NsYXNzKCkKSGFuZC5uYW1lID0gIkhhbmQiCmZ1bmN0aW9uIEhhbmQucHJvdG90eXBlLl9fX19jb25zdHJ1Y3RvcihzZWxmKQpzZWxmLmNhcmRzID0ge30Kc2VsZi5zZWxlY3RlZENhcmQgPSAwCmVuZApmdW5jdGlvbiBIYW5kLnByb3RvdHlwZS5nZW5lcmF0ZU5ld0hhbmQoc2VsZikKcHJpbnQoIiMgR2VuZXJhdGluZyBOZXcgSGFuZCAjIikKbG9jYWwgbmV3Q2FyZCA9IG5pbApkbwpsb2NhbCBpID0gMAp3aGlsZSBpIDwgMyBkbwpuZXdDYXJkID0gc2VsZjpnZXROZXdDYXJkKCkKcHJpbnQoIkdldCBjYXJkIHdpdGggc3VjY2VzczoiLCBuZXdDYXJkKQpsb2NhbCBjYXJkQ291bnQgPSAwCmRvCmxvY2FsIG4gPSAwCndoaWxlIG4gPCAjc2VsZi5jYXJkcyBkbwppZiBjYXJkQ291bnQgPT0gMiB0aGVuCmJyZWFrCmVuZApsb2NhbCBjYXJkID0gc2VsZi5jYXJkc1tuICsgMV0KaWYgY2FyZC5pZCA9PSBuZXdDYXJkLmlkIHRoZW4KY2FyZENvdW50ID0gY2FyZENvdW50ICsgMQplbmQKbiA9IG4gKyAxCmVuZAplbmQKaWYgY2FyZENvdW50ID49IDIgdGhlbgpsb2NhbCByZXNlcnZlQ2FyZCA9IHNlbGY6Z2V0TmV3Q2FyZCgpCndoaWxlIG5ld0NhcmQuaWQgPT0gcmVzZXJ2ZUNhcmQuaWQgZG8KcmVzZXJ2ZUNhcmQgPSBzZWxmOmdldE5ld0NhcmQoKQplbmQKbG9jYWwgX19fX3NlbGZfY2FyZHNfMCA9IHNlbGYuY2FyZHMKX19fX3NlbGZfY2FyZHNfMFsjX19fX3NlbGZfY2FyZHNfMCArIDFdID0gcmVzZXJ2ZUNhcmQKZWxzZQpsb2NhbCBfX19fc2VsZl9jYXJkc18xID0gc2VsZi5jYXJkcwpfX19fc2VsZl9jYXJkc18xWyNfX19fc2VsZl9jYXJkc18xICsgMV0gPSBuZXdDYXJkCmVuZAppID0gaSArIDEKZW5kCmVuZApwcmludCgiRmluaXNoZWQgZ2VuZXJhdGluZyBuZXcgaGFuZCEiKQplbmQKZnVuY3Rpb24gSGFuZC5wcm90b3R5cGUuZ2V0TmV3Q2FyZChzZWxmKQpwcmludCgiR2VuZXJhdGluZyBDYXJkLi4uIikKcmV0dXJuIF9fVFNfX05ldygKQ2FyZCwKQ0FSRF9MSVNUW21hdGguZmxvb3IobWF0aC5yYW5kb20oKSAqICNDQVJEX0xJU1QpICsgMV0KKQplbmQKZnVuY3Rpb24gSGFuZC5wcm90b3R5cGUuZHJhd0hhbmRDYXJkcyhzZWxmLCBzdGQpCl9fVFNfX0FycmF5Rm9yRWFjaCgKc2VsZi5jYXJkcywKZnVuY3Rpb24oX19fXywgY2FyZCkKY2FyZDpkcmF3Q2FyZChzdGQpCmVuZAopCmVuZApmdW5jdGlvbiBIYW5kLnByb3RvdHlwZS51cGRhdGVTdGF0ZShzZWxmLCBzdGQpCl9fVFNfX0FycmF5Rm9yRWFjaCgKc2VsZi5jYXJkcywKZnVuY3Rpb24oX19fXywgY2FyZCkKY2FyZDp1cGRhdGUoc3RkKQplbmQKKQplbmQKZnVuY3Rpb24gSGFuZC5wcm90b3R5cGUuc2V0Q2FyZHNQb3NpdGlvbihzZWxmLCBzY3JlZW5XaWR0aCwgc2NyZWVuSGVpZ2h0KQpsb2NhbCBuZXdQb3NpdGlvbiA9IF9fVFNfX05ldyhWZWN0b3IyLCAwLCAwKQpsb2NhbCBzcGFjaW5nID0gNTAKbG9jYWwgY2FyZFdpZHRoID0gMTI2CmxvY2FsIGNhcmRIZWlnaHQgPSAxODYKbG9jYWwgdG90YWxXaWR0aCA9ICNzZWxmLmNhcmRzICogc3BhY2luZyArICgjc2VsZi5jYXJkcyAtIDEpICogY2FyZFdpZHRoCmxvY2FsIHggPSAoc2NyZWVuV2lkdGggLSB0b3RhbFdpZHRoKSAvIDIKX19UU19fQXJyYXlGb3JFYWNoKApzZWxmLmNhcmRzLApmdW5jdGlvbihfX19fLCBjYXJkKQpjYXJkLnRyYW5zZm9ybS5wb3NpdGlvbiA9IF9fVFNfX05ldyhWZWN0b3IyLCB4LCBzY3JlZW5IZWlnaHQgLSBjYXJkSGVpZ2h0IC0gc3BhY2luZykKeCA9IHggKyAxNjAKZW5kCikKZW5kCmZ1bmN0aW9uIEhhbmQucHJvdG90eXBlLnNldEFjdGl2ZUNhcmQoc2VsZiwgc3VtKQppZiBzdW0gdGhlbgpwcmludCgiMCIpCmlmIHNlbGYuc2VsZWN0ZWRDYXJkID4gI3NlbGYuY2FyZHMgdGhlbgpzZWxmLnNlbGVjdGVkQ2FyZCA9IHNlbGYuc2VsZWN0ZWRDYXJkICsgMQplbmQKc2VsZi5jYXJkc1tzZWxmLnNlbGVjdGVkQ2FyZCArIDFdOnVwKCkKcHJpbnQoIjEiKQpkbwpsb2NhbCBpID0gMAp3aGlsZSBpIDwgI3NlbGYuY2FyZHMgZG8KcHJpbnQoIjIiKQpsb2NhbCBjYXJkID0gc2VsZi5jYXJkc1tpICsgMV0KaWYgaSB+PSBzZWxmLnNlbGVjdGVkQ2FyZCB0aGVuCnByaW50KCIzIikKY2FyZDpkb3duKCkKZW5kCmkgPSBpICsgMQplbmQKZW5kCmVsc2UKcHJpbnQoImVsc2UiKQppZiBzZWxmLnNlbGVjdGVkQ2FyZCA+IDAgdGhlbgpzZWxmLnNlbGVjdGVkQ2FyZCA9IHNlbGYuc2VsZWN0ZWRDYXJkIC0gMQplbmQKc2VsZi5jYXJkc1tzZWxmLnNlbGVjdGVkQ2FyZCArIDFdOnVwKCkKZG8KbG9jYWwgaSA9IDAKd2hpbGUgaSA8ICNzZWxmLmNhcmRzIGRvCmxvY2FsIGNhcmQgPSBzZWxmLmNhcmRzW2kgKyAxXQppZiBpIH49IHNlbGYuc2VsZWN0ZWRDYXJkIHRoZW4KY2FyZDpkb3duKCkKZW5kCmkgPSBpICsgMQplbmQKZW5kCmVuZApwcmludCgiZmltIikKZW5kCmxvY2FsIGhhbmQgPSBfX1RTX19OZXcoSGFuZCkKbG9jYWwgZnVuY3Rpb24gaW5pdChzdGQsIGdhbWUpCmhhbmQ6Z2VuZXJhdGVOZXdIYW5kKCkKaGFuZDpzZXRDYXJkc1Bvc2l0aW9uKGdhbWUud2lkdGgsIGdhbWUuaGVpZ2h0KQplbmQKbG9jYWwgZnVuY3Rpb24gbG9vcChzdGQsIGdhbWUpCmlmIHN0ZC5rZXkucHJlc3MubGVmdCB0aGVuCnByaW50KCJwcmVzc2VkIGxlZnQiKQpoYW5kOnNldEFjdGl2ZUNhcmQodHJ1ZSkKZW5kCmlmIHN0ZC5rZXkucHJlc3MucmlnaHQgdGhlbgpwcmludCgicHJlc3NlZCByaWdodCIpCmhhbmQ6c2V0QWN0aXZlQ2FyZChmYWxzZSkKZW5kCmhhbmQ6dXBkYXRlU3RhdGUoc3RkKQplbmQKbG9jYWwgZnVuY3Rpb24gZHJhdyhzdGQsIGdhbWUpCnN0ZC5kcmF3LmNsZWFyKHN0ZC5jb2xvci5ibGFjaykKaGFuZDpkcmF3SGFuZENhcmRzKHN0ZCkKZW5kCmxvY2FsIGZ1bmN0aW9uIGV4aXQoc3RkLCBnYW1lKQplbmQKX19fX2V4cG9ydHMuaW5pdCA9IGluaXQKX19fX2V4cG9ydHMubG9vcCA9IGxvb3AKX19fX2V4cG9ydHMuZHJhdyA9IGRyYXcKX19fX2V4cG9ydHMuZXhpdCA9IGV4aXQKcmV0dXJuIF9fX19leHBvcnRzCmVuZApnYW1lX3NyY19nYW1lT2JqZWN0XzFkYmRjOCA9IGZ1bmN0aW9uKCkKbG9jYWwgZnVuY3Rpb24gX19UU19fQ2xhc3Moc2VsZikKbG9jYWwgYyA9IHtwcm90b3R5cGUgPSB7fX0KYy5wcm90b3R5cGUuX19pbmRleCA9IGMucHJvdG90eXBlCmMucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gYwpyZXR1cm4gYwplbmQKbG9jYWwgZnVuY3Rpb24gX19UU19fTmV3KHRhcmdldCwgLi4uKQpsb2NhbCBpbnN0YW5jZSA9IHNldG1ldGF0YWJsZSh7fSwgdGFyZ2V0LnByb3RvdHlwZSkKaW5zdGFuY2U6X19fX2NvbnN0cnVjdG9yKC4uLikKcmV0dXJuIGluc3RhbmNlCmVuZApsb2NhbCBfX19fZXhwb3J0cyA9IHt9CmxvY2FsIEFuaW1hdGlvbkNvbnRyb2xsZXIKX19fX2V4cG9ydHMuVmVjdG9yMiA9IF9fVFNfX0NsYXNzKCkKbG9jYWwgVmVjdG9yMiA9IF9fX19leHBvcnRzLlZlY3RvcjIKVmVjdG9yMi5uYW1lID0gIlZlY3RvcjIiCmZ1bmN0aW9uIFZlY3RvcjIucHJvdG90eXBlLl9fX19jb25zdHJ1Y3RvcihzZWxmLCB4LCB5KQpzZWxmLnggPSB4CnNlbGYueSA9IHkKZW5kCmxvY2FsIFRyYW5zZm9ybSA9IF9fVFNfX0NsYXNzKCkKVHJhbnNmb3JtLm5hbWUgPSAiVHJhbnNmb3JtIgpmdW5jdGlvbiBUcmFuc2Zvcm0ucHJvdG90eXBlLl9fX19jb25zdHJ1Y3RvcihzZWxmLCBwb3NpdGlvbiwgc2NhbGUpCnNlbGYucG9zaXRpb24gPSBwb3NpdGlvbgpzZWxmLnNjYWxlID0gc2NhbGUKZW5kCl9fX19leHBvcnRzLkdhbWVPYmplY3QgPSBfX1RTX19DbGFzcygpCmxvY2FsIEdhbWVPYmplY3QgPSBfX19fZXhwb3J0cy5HYW1lT2JqZWN0CkdhbWVPYmplY3QubmFtZSA9ICJHYW1lT2JqZWN0IgpmdW5jdGlvbiBHYW1lT2JqZWN0LnByb3RvdHlwZS5fX19fY29uc3RydWN0b3Ioc2VsZiwgcG9zaXRpb24sIHNjYWxlKQpzZWxmLnRyYW5zZm9ybSA9IF9fVFNfX05ldyhUcmFuc2Zvcm0sIHBvc2l0aW9uLCBzY2FsZSkKc2VsZi5hbmltYXRvciA9IF9fVFNfX05ldyhBbmltYXRpb25Db250cm9sbGVyLCBzZWxmKQplbmQKZnVuY3Rpb24gR2FtZU9iamVjdC5wcm90b3R5cGUuZHJhdyhzZWxmLCBzdGQpCnN0ZC5kcmF3LnJlY3QoCjAsCnNlbGYudHJhbnNmb3JtLnBvc2l0aW9uLngsCnNlbGYudHJhbnNmb3JtLnBvc2l0aW9uLnksCnNlbGYudHJhbnNmb3JtLnNjYWxlLngsCnNlbGYudHJhbnNmb3JtLnNjYWxlLnkKKQplbmQKZnVuY3Rpb24gR2FtZU9iamVjdC5wcm90b3R5cGUudXBkYXRlKHNlbGYsIGR0KQpzZWxmLmFuaW1hdG9yOnVwZGF0ZShkdCkKZW5kCmZ1bmN0aW9uIEdhbWVPYmplY3QucHJvdG90eXBlLnN0YXJ0KHNlbGYsIHBvc2l0aW9uLCBkdXJhdGlvbikKc2VsZi5hbmltYXRvcjpzdGFydChwb3NpdGlvbiwgZHVyYXRpb24pCmVuZApBbmltYXRpb25Db250cm9sbGVyID0gX19UU19fQ2xhc3MoKQpBbmltYXRpb25Db250cm9sbGVyLm5hbWUgPSAiQW5pbWF0aW9uQ29udHJvbGxlciIKZnVuY3Rpb24gQW5pbWF0aW9uQ29udHJvbGxlci5wcm90b3R5cGUuX19fX2NvbnN0cnVjdG9yKHNlbGYsIG9iaikKc2VsZi5vYmogPSBvYmoKc2VsZi5hY3RpdmUgPSBmYWxzZQpzZWxmLmR1cmF0aW9uID0gMApzZWxmLmVsYXBzZWQgPSAwCmVuZApmdW5jdGlvbiBBbmltYXRpb25Db250cm9sbGVyLnByb3RvdHlwZS5zdGFydChzZWxmLCBwb3NpdGlvbiwgZHVyYXRpb24pCnNlbGYuc3RhcnRQb3NpdGlvbiA9IHNlbGYub2JqLnRyYW5zZm9ybS5wb3NpdGlvbgpzZWxmLmVuZFBvc2l0aW9uID0gcG9zaXRpb24Kc2VsZi5kdXJhdGlvbiA9IGR1cmF0aW9uCnNlbGYuZWxhcHNlZCA9IDAKc2VsZi5hY3RpdmUgPSB0cnVlCmVuZApmdW5jdGlvbiBBbmltYXRpb25Db250cm9sbGVyLnByb3RvdHlwZS51cGRhdGUoc2VsZiwgZHQpCmlmIG5vdCBzZWxmLmFjdGl2ZSB0aGVuCnJldHVybgplbmQKc2VsZi5lbGFwc2VkID0gc2VsZi5lbGFwc2VkICsgZHQgLyAxMDAwCnByaW50KCJFbGFwc2VkIHRpbWUgKHMpOiIsIHNlbGYuZWxhcHNlZCkKbG9jYWwgdCA9IG1hdGgubWluKHNlbGYuZWxhcHNlZCAvIHNlbGYuZHVyYXRpb24sIDEpCnByaW50KCJOb3JtYWxpemVkIHQ6IiwgdCkKbG9jYWwgZWFzZWRUID0gMSAtICgxIC0gdCkgXiA1CnByaW50KCJFYXNlZCB0OiIsIGVhc2VkVCkKbG9jYWwgbmV3WCA9IHNlbGYuc3RhcnRQb3NpdGlvbi54ICsgKHNlbGYuZW5kUG9zaXRpb24ueCAtIHNlbGYuc3RhcnRQb3NpdGlvbi54KSAqIGVhc2VkVApsb2NhbCBuZXdZID0gc2VsZi5zdGFydFBvc2l0aW9uLnkgKyAoc2VsZi5lbmRQb3NpdGlvbi55IC0gc2VsZi5zdGFydFBvc2l0aW9uLnkpICogZWFzZWRUCnByaW50KCJOZXcgUG9zaXRpb246Iiwge3ggPSBuZXdYLCB5ID0gbmV3WX0pCnNlbGYub2JqLnRyYW5zZm9ybS5wb3NpdGlvbi54ID0gbmV3WApzZWxmLm9iai50cmFuc2Zvcm0ucG9zaXRpb24ueSA9IG5ld1kKaWYgZWFzZWRUID49IDEgdGhlbgpzZWxmLmFjdGl2ZSA9IGZhbHNlCnNlbGYub2JqLnRyYW5zZm9ybS5wb3NpdGlvbi54ID0gc2VsZi5lbmRQb3NpdGlvbi54CnNlbGYub2JqLnRyYW5zZm9ybS5wb3NpdGlvbi55ID0gc2VsZi5lbmRQb3NpdGlvbi55CnByaW50KCJBbmltYXRpb24gY29tcGxldGUiKQplbmQKZW5kCnJldHVybiBfX19fZXhwb3J0cwplbmQKLS0KcmV0dXJuIG1haW5fMWIwNzAwKCkK')
window.game_code=atob('')
window.game_code=atob('')
window.game_code=atob('')
